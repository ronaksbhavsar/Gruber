{"version":3,"sources":["../../src/pages/activity-details/activity-details.module.ts","../../src/pages/activity-details/activity-details.ts"],"names":[],"mappings":"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","file":"12.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ActivityDetailsPage } from './activity-details';\n\n@NgModule({\n  declarations: [\n      ActivityDetailsPage,\n  ],\n  imports: [\n      IonicPageModule.forChild(ActivityDetailsPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n      ActivityDetailsPage\n  ]\n})\nexport class ActivityDetailsPageModule { }\n \n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity-details/activity-details.module.ts","//import { NativeGoogleMapsProvider } from '../../providers/native-google-maps/native-google-maps';\nimport { Component, ViewChild } from '@angular/core'; //ViewChild, ElementRef \nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ModalController,\n    NavParams, Content, LoadingController, AlertController } from 'ionic-angular';\nimport { DataService } from '../../providers/data-service/data-service';\nimport { CallNumber } from '@ionic-native/call-number';\n\nimport { Sync } from '../../providers/sync/sync';\n//import { GoogleMaps, GoogleMap, GoogleMapsEvent, LatLng, CameraPosition, MarkerOptions, Marker } from '@ionic-native/google-maps';\n\n\n@IonicPage()\n@Component({\n    selector: 'page-activity-details',\n    templateUrl: 'activity-details.html'\n})\nexport class ActivityDetailsPage {\n\n    user = {\r\n        id: \"\"\r\n    };\n\n    tripId: string = \"\";\n    tripActivityData: any = [];\n\n    MobTripData: any = {\r\n        mobTripDetail: {\n            id: \"\",\n            t_mapImage: \"\",\r\n            t_number: \"\",\r\n            t_branch: \"\",\r\n            t_year: \"\",\r\n            t_company: \"\"\n        },\n        tripLoadUnLoadData: [],\n        tripGoodsDescData: [],\n        tripReqDocumentData: [],\n        tripTimeLineData: []\n    };\n\n    tranlageMessage: any = [];\n    public isgoodsDescriptionShow: boolean = true;\n    public managerNumber: string = \"\";\n\n    constructor(\n        public navCtrl: NavController,\n        public modalCtrl: ModalController,\n        public translate: TranslateService,\n        public loadingCtrl: LoadingController,\n        public navParams: NavParams,\n        public callNumber: CallNumber,\n        public sync: Sync,\n        public dataService: DataService,\n        public alertCtrl: AlertController\n\n    ) {\n\n        this.translate.get([\n            \"ACTIVITY_DETAILS_BREAK_ACTIVITY_TITLE\",\n            \"ACTIVITY_DETAILS_EVENT_ACTIVITY_TITLE\",\n            \"ACTIVITY_DETAILS_PHOTO_ACTIVITY_TITLE\",\n            \"ACTIVITY_DETAILS_BREAK_ACTIVITY_MESSAGE\",\n            \"ACTIVITY_DETAILS_MESSAGE_ACTIVITY_TITLE\",\n            \"LOADING_LABEL\",\n            \"ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_CANCEL\",\n            \"ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_OK\",\n            \"ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_CANCEL\",\n            \"ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_OK\",\n        ]).subscribe(\n            (values) => {\r\n                this.tranlageMessage['ACTIVITY_DETAILS_BREAK_ACTIVITY_TITLE'] = values.ACTIVITY_DETAILS_BREAK_ACTIVITY_TITLE,\n                    this.tranlageMessage['ACTIVITY_DETAILS_EVENT_ACTIVITY_TITLE'] = values.ACTIVITY_DETAILS_EVENT_ACTIVITY_TITLE,\n                    this.tranlageMessage['ACTIVITY_DETAILS_PHOTO_ACTIVITY_TITLE'] = values.ACTIVITY_DETAILS_PHOTO_ACTIVITY_TITLE,\n                    this.tranlageMessage['ACTIVITY_DETAILS_BREAK_ACTIVITY_MESSAGE'] = values.ACTIVITY_DETAILS_BREAK_ACTIVITY_MESSAGE\n                this.tranlageMessage['LOADING_LABEL'] = values.LOADING_LABEL,\n                    this.tranlageMessage['ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_CANCEL'] = values.ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_CANCEL,\n                    this.tranlageMessage['ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_OK'] = values.ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_OK,\n                    this.tranlageMessage['ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_CANCEL'] = values.ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_CANCEL,\n                    this.tranlageMessage['ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_OK'] = values.ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_OK,\n                    this.tranlageMessage['ACTIVITY_DETAILS_MESSAGE_ACTIVITY_TITLE'] = values.ACTIVITY_DETAILS_MESSAGE_ACTIVITY_TITLE\n\n            });\n\n        this.dataService.getUser().then((res) => {\r\n            this.user = res;\r\n        });\n        this.tripId = navParams.get(\"tripId\");\n\n    }\n\n    @ViewChild(Content) content: Content;\r\n\r\n    ionViewDidLoad() {\n        this.getMobTripDetails(this.tripId);\n    }\n\n    getMobTripDetails(tripId: string) {\n\n        let loader = this.loadingCtrl.create({\r\n            dismissOnPageChange: true,\r\n            content: this.tranlageMessage['LOADING_LABEL'],\r\n        });\n        loader.present().then(() => {\n\n            this.dataService.getMob_tripById(tripId).then((response) => {\r\n                console.log('called getMob_tripById');\r\n                this.MobTripData.mobTripDetail = response[0];\r\n\r\n            })\n                .then((_) => {\n                    this.dataService.getTripRequestedDocumentByTripId(tripId).then((response) => {\r\n                        console.log('called getTripRequestedDocumentByTripId');\r\n                        this.MobTripData.tripReqDocumentData = response;\r\n\r\n                    });\n                })\n                .then((_) => {\n                    this.dataService.getTripTimeLineByTripId(tripId).then((response) => {\r\n                        console.log('called getTripTimeLineByTripId');\r\n                        this.MobTripData.tripLoadUnLoadData = response;\r\n                    });\n                })\n                .then((_) => {\n                    this.dataService.getTripGoodsDescriptionByTripId(tripId).then((response) => {\r\n                        console.log('called getTripGoodsDescriptionByTripId');\r\n                        this.MobTripData.tripGoodsDescData = response[0];\r\n                    });\n                })\n                .then((_) => {\n                    this.dataService.getTripEventTimeLineByTripIdNew(tripId).then((response) => {\r\n                        console.log('called getTripEventTimeLineByTripIdNew');\r\n                        this.MobTripData.tripTimeLineData = response;\r\n\r\n                        loader.dismiss().catch((error) => {\r\n                            console.log('loader error:', error);\r\n                        });\r\n                        return false;\r\n                    });\n                });\n        });\n\n    }\n\n    goToOtherPage(pageName) {\r\n        this.navCtrl.push(pageName);\r\n    }\n\n    goBack() {\r\n        this.navCtrl.pop();\r\n    }\n\n\n    showDetails() {\n        if (this.isgoodsDescriptionShow) {\n            this.isgoodsDescriptionShow = false;\n        }\n        else {\n            this.isgoodsDescriptionShow = true;\n        }\n\n    }\n\n    openModal(pageName) {\r\n        this.modalCtrl.create(pageName, null, { cssClass: 'inset-modal' })\r\n            .present();\r\n    }\n\n    seeActivityList() {\n        this.navCtrl.setRoot('ActivityListPage', {}, {\n            animate: true,\n            direction: 'forward'\n        });\n    }\n\n    confirmActivity(tripData) {\n        let modal = this.modalCtrl.create('ConfirmActivityPage',\r\n            { data: tripData, pageName: 'ConfirmTimeLineActivity' },\r\n            { cssClass: 'inset-modal' });\n\n        modal.onDidDismiss(() => {\r\n            this.ionViewDidLoad();\r\n        });\r\n        modal.present();        \n    }\n\n    createActivity(tripId, groupId, title) {\n        var options = {\r\n            title: title,\r\n            buttons: [\r\n                {\r\n                    text: this.tranlageMessage['ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_CANCEL'],\r\n                    role: 'cancel',\r\n                    handler: () => { }\r\n                },\r\n                {\r\n                    text: this.tranlageMessage['ACTIVITY_DETAILS_CREATE_ACTIVITY_BTN_OK'],\r\n                    handler: activityId => {\r\n                        this.modalCtrl.create('ConfirmActivityPage', {\r\n                            tripId: tripId,\r\n                            tl_activityId: activityId,\r\n                            pageName: 'BreakEventActivity'\r\n                        }, { cssClass: 'inset-modal' })\r\n                            .present();\r\n                    }\r\n                }\r\n            ],\r\n            inputs: []\r\n        };\r\n\n        this.dataService.getMobActivityByActivityGroup(groupId).then((response) => {\r\n            this.tripActivityData = response;\r\n            for (let tripActivity of this.tripActivityData) {\r\n                options.inputs.push(\r\n                    {\r\n                        type: 'radio',\r\n                        label: tripActivity.a_description,\r\n                        value: tripActivity.id\r\n                    }\r\n                );\r\n            }\r\n            let breakAlert = this.alertCtrl.create(options);\r\n            breakAlert.present();\r\n        });\r\n    }\n\n    breakActivity() {\r\n\r\n        //if (currentActivity.a_activityGroup == '10' || currentActivity.a_activityGroup == '11') {\r\n        //    let alert = this.alertCtrl.create({\r\n        //        title: 'Gruber',\r\n        //        subTitle: this.tranlageMessage['ACTIVITY_DETAILS_BREAK_ACTIVITY_MESSAGE'],\r\n        //        buttons: ['OK']\r\n        //    });\r\n        //    alert.present();\r\n        //} else {\r\n        //    let breakGroupId = '10';\r\n        //    let title = this.tranlageMessage['ACTIVITY_DETAILS_BREAK_ACTIVITY_TITLE'];\r\n        //    this.createActivity(this.tripId, breakGroupId, title);\r\n        //}\r\n\r\n        let breakGroupId = '10';\r\n        let title = this.tranlageMessage['ACTIVITY_DETAILS_BREAK_ACTIVITY_TITLE'];\r\n        this.createActivity(this.tripId, breakGroupId, title);\r\n    }\n\n    newEventActivity() {\r\n        let eventGroupId = '20';\r\n        let title = this.tranlageMessage['ACTIVITY_DETAILS_EVENT_ACTIVITY_TITLE'];\r\n        this.createActivity(this.tripId, eventGroupId, title);\r\n    }\n\n    callManagerActivity(dp_phone: string) {    \n        console.log('dp_phone: ', dp_phone);\n        let managerNumber = '';\n        if (dp_phone != \"\") {\n            managerNumber = dp_phone.replace(\"+\", \"\");\n            this.callNumber.callNumber(managerNumber, true)\r\n                .then(() => {\r\n                })\r\n                .catch(() => {\r\n                    console.log('Error launching dialer');\r\n                });\n        }\n    }\n\n    photoActivity() {\n        let title = this.tranlageMessage['ACTIVITY_DETAILS_PHOTO_ACTIVITY_TITLE'];\n        var options = {\r\n            title: title,\r\n            buttons: [\r\n                {\r\n                    text: this.tranlageMessage['ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_CANCEL'],\r\n                    role: 'cancel',\r\n                    handler: () => {\r\n\r\n                    }\r\n                },\r\n                {\r\n                    text: this.tranlageMessage['ACTIVITY_DETAILS__PHOTO_ACTIVITY_BTN_OK'],\r\n                    handler: documentTypeId => {\r\n\r\n                        this.documentScanAndPhotoUpload(this.tripId, documentTypeId);\n\r\n                        //this.dataService.getDocumentTypesByTripIdAndDocumentTypeId(this.tripId, documentTypeId)\r\n                        //    .then((tripDocument) => {\r\n                        //    if (tripDocument.d_barcodeRequired == 1) {\r\n                        //        // Scan Document and take a picture of document\r\n                        //        this.navCtrl.push('DocumentScanPage',\r\n                        //            {\r\n                        //                't_tripId': this.tripId,\r\n                        //                'td_docType': tripDocument.td_docType\r\n                        //            });\r\n\r\n                        //    } else {\r\n\r\n                        //        // Only need to take a pictures of document types..\r\n                        //        this.navCtrl.push('PictureUploadPage',\r\n                        //            {\r\n                        //                tripId: this.tripId,\r\n                        //                tripDocumentId: tripDocument.tripDocumentId,\r\n                        //                documentTypeId: tripDocument.id,\r\n                        //                d_barcodeRequired: tripDocument.d_barcodeRequired,\r\n                        //                pageName: 'photoActivity'\r\n                        //            });\r\n                        //    }\r\n\r\n                        //});\r\n                    }\r\n                }\r\n            ],\r\n            inputs: []\r\n        };\r\n\n        this.dataService.getDocumentTypesByGroup(\"ALL\").then((documentTypes) => {\r\n            for (let documentType of documentTypes) {\r\n                options.inputs.push(\r\n                    {\r\n                        type: 'radio',\r\n                        label: documentType.d_description,\r\n                        value: documentType.id\r\n                    }\r\n                );\r\n            }\r\n            let breakAlert = this.alertCtrl.create(options);\r\n            breakAlert.present();\r\n        });\n\n    }\n\n    messageActivity(currentActivity) {\n        let loader = this.loadingCtrl.create({\r\n            content: this.tranlageMessage['ACTIVITY_DETAILS_MESSAGE_ACTIVITY_TITLE'],\r\n        });\n        loader.present();\r\n\r\n        let activityName = currentActivity.t_company.toString() + \"-\" + currentActivity.t_number.toString()\r\n            + \"/\" + currentActivity.t_branch.toString() + \"/\" + currentActivity.t_year.toString();\r\n\r\n        this.dataService.getMob_messagesByDp_id(this.user.id, currentActivity.id).then((response) => {\n            if (response.length == 0) {\n                let mobMessageObj = {\n                    'm_objectType': \"Trip\",\n                    'm_objectKey': currentActivity.id,\n                    'dp_id': this.user.id,\n                    'dp_group': '',\n                    'm_dtcreation': new Date(),\n                    'm_status': 'Open',\n                    'm_source': 'Conversation has been started by Mobile',\r\n                    'Deleted': false\r\n                };\n\n                this.sync.insertTableRow('mob_messages', mobMessageObj).then((msg) => {\r\n                    //  this.userId = result.id;\r\n                    loader.dismiss();\r\n                    this.navCtrl.push('MessagesPage',\r\n                        { DpName: activityName, MessageId: msg.id, DpPhone: msg.m_objectKey });\r\n                });\n            }\n            else {\r\n                loader.dismiss();\r\n                // already availbale in messages. so no need to add it again.\r\n                this.navCtrl.push('MessagesPage',\n                    { DpName: activityName, MessageId: response[0].id, DpPhone: response[0].m_objectKey });\n            }\r\n        });\r\n\n    }\n\n    createDocument(tripDocument) {\n\n        this.documentScanAndPhotoUpload(tripDocument.tripId, tripDocument.td_docType);\n\n        //alert(\"Request Document \" + JSON.stringify(tripDocument));\n        //if (tripDocument.d_barcodeRequired == 1) {\n        //    this.navCtrl.push('DocumentScanPage',\r\n        //        {\r\n        //            't_tripId': tripDocument.tripId,\r\n        //            'td_docType': tripDocument.td_docType\r\n        //        });\r\n        //} else {\n        //    this.navCtrl.push('PictureUploadPage');\r\n        //}\n        //this.navCtrl.push('PictureUploadPage', { 'tripDocumentsId': TripReqDocument.tripDocumentsId, pageName: 'TripReqDocument' });\r\n    }\n\n    documentScanAndPhotoUpload(tripId, documentTypeId) {\n\n        this.dataService.getDocumentTypesByTripIdAndDocumentTypeId(tripId, documentTypeId)\r\n            .then((tripDocument) => {\r\n                if (tripDocument.d_barcodeRequired == 1) {\r\n                    // Scan Document and take a picture of document\r\n                    //this.navCtrl.push('DocumentScanPage',\r\n                    //    {\r\n                    //        't_tripId': tripId,\r\n                    //        'td_docType': tripDocument.td_docType\r\n                    //    });\r\n                    let tripDocumentObj = { t_tripId: tripId, td_docType: tripDocument.documentTypeId };\r\n                    this.modalCtrl.create('DocumentScanPage', tripDocumentObj).present();\r\n                }\r\n                else {\r\n                    // Only need to take a pictures of document types..\r\n\r\n                    //let tripDocumentObj = {\r\n                    //    tripId: tripId,\r\n                    //    tripDocumentId: tripDocument.tripDocumentId,\r\n                    //    documentTypeId: tripDocument.documentTypeId,\r\n                    //    d_barcodeRequired: tripDocument.d_barcodeRequired,\r\n                    //    pageName: 'photoActivity'\r\n                    //};\r\n                    let tripDocumentObj = {\r\n                        t_tripId: tripId,\r\n                        td_docType: tripDocument.documentTypeId,\r\n                        pageName: 'PhotoUploadActivity'\r\n                    };\r\n                    this.modalCtrl.create('PictureUploadPage', tripDocumentObj).present();\r\n\r\n                }\r\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity-details/activity-details.ts"],"sourceRoot":""}