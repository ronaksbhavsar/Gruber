{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { SettingsPage } from './settings';\n\n@NgModule({\n    declarations: [\n        SettingsPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(SettingsPage),\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SettingsPage\n    ]\n})\nexport class SettingsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, Platform, ActionSheetController, LoadingController, NavParams } from 'ionic-angular';\nimport { DataService } from '../../providers/data-service/data-service';\nimport { Sync } from '../../providers/sync/sync';\n\nimport { Events } from 'ionic-angular';\n\n/**\n * The Settings page is a simple form that syncs with a Settings provider\n * to enable the user to customize settings for the app.\n *\n */\n\n@IonicPage()\n@Component({\n    selector: 'page-settings',\n    templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n    // Our local settings object\n    pageTitle: string = \"\";\n    profilePicture: string;\n    chosenPicture: any;\n    public userSettings: any = [];\n    user: any = {\n        id: \"\",\r\n        u_name: \"\",\r\n        selectedLanguage: \"\",\r\n        imageUrl: \"\"\r\n    }\n\n    Languages: any[] = [\n        {\r\n            'name': 'English',\r\n            'id': 'en'\r\n        },\r\n        {\r\n            'name': 'Italian',\r\n            'id': 'it'\r\n        }\n    ];\n\n    constructor(public navCtrl: NavController,\n\n        public navParams: NavParams,\n        public dataService: DataService,\n        public sync: Sync,\n        public platform: Platform,\n        public actionsheetCtrl: ActionSheetController,\n        public translate: TranslateService,\n        public loadingCtrl: LoadingController,\n        public events: Events\n    ) {\n        this.getUserDetail();\n        this.getUserSettings();\n    }\r\n\r\n\r\n    getUserDetail() {\r\n        this.dataService.getUser().then((response) => {\r\n            this.user.id = response.id;\r\n            this.user.u_name = response.u_name;\r\n\r\n            if (response.u_language == \"\" || response.u_language == null) {\r\n                this.user.selectedLanguage = this.Languages[0];\r\n            } else {\r\n                this.user.selectedLanguage = this.Languages.filter(q => q.id == response.u_language);\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserSettings() {\r\n        this.dataService.getMob_UserSettings().then((response) => {\r\n            this.userSettings = response;\r\n        });\r\n    }\n\n    updateSettingItem(option) {\r\n\r\n        this.sync.updateTableRow('Mob_userSettings', {\r\n            \"id\": option.id,\r\n            \"set_value\": option.set_value\r\n        }).then((result) => {\r\n\r\n        });\r\n    }\n\n    updateUserName(value) {\n        this.user.u_name = value;\r\n\r\n        this.sync.updateTableRow('Mob_user', {\r\n            \"id\": this.user.id,\r\n            \"u_name\": this.user.u_name\r\n        }).then((result) => {\r\n\r\n        });\r\n    }\n\n    updateUserLanguages(option) {\r\n\r\n        this.events.publish('changeUserLanguage', option.id);\r\n\r\n        this.sync.updateTableRow('Mob_user', {\r\n            \"id\": this.user.id,\r\n            \"u_language\": option.id\r\n        }).then((result) => {\r\n        });\r\n    }\n\n    logoff() {\n        this.dataService.clearUserData().then(() => {\n            this.navCtrl.setRoot('LoginPage', {}, { animate: true, direction: 'backward' });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}