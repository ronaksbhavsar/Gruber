{"version":3,"sources":["../../src/pages/notifications/notifications.module.ts","../../src/pages/notifications/notifications.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEQ;AAcxD,IAAa,uBAAuB;IAApC;IAAuC,CAAC;IAAD,8BAAC;AAAD,CAAC;AAA3B,uBAAuB;IAZnC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACV,6EAAqB;SACxB;QACD,OAAO,EAAE;YACL,sEAAe,CAAC,QAAQ,CAAC,6EAAqB,CAAC;YACjD,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACL,6EAAqB;SACxB;KACF,CAAC;GACW,uBAAuB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBM;AACa;AACU;AAChB;AAEuB;AAOxE,IAAa,qBAAqB;IAI9B,+BACW,OAAsB,EACtB,WAA8B,EAC9B,IAAU,EACV,WAAwB,EACxB,gBAAkC;QAJlC,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,SAAI,GAAJ,IAAI,CAAM;QACV,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAP7C,kBAAa,GAAU,EAAE,CAAC;QAC1B,WAAM,GAAW,EAAE,CAAC;IAQpB,CAAC;IAED,8CAAc,GAAd;QACI,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAE/B,CAAC;IAED,mDAAmB,GAAnB;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YACjC,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,aAAa;gBAC9D,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,wCAAQ,GAAR;QACI,8BAA8B;QAC9B,IAAI,kBAAkB,GAAW,EAAE,CAAC;QACpC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,kBAAkB,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACjC,OAAO,EAAE,kBAAkB;SAC9B,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;QAEjB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAChC,MAAM,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACL,4BAAC;AAAD,CAAC;AA3CY,qBAAqB;IAJjC,gEAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;OACG;KACpC,CAAC;iFAMmC;QACT,mEAAiB;QACxB,yFAAI;QACG,6EAAW;QACN,gBAAgB;AAkChD;SA3CY,qBAAqB,W","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { NotificationsListPage } from './notifications';\n\n@NgModule({\n  declarations: [\n      NotificationsListPage,\n  ],\n  imports: [\n      IonicPageModule.forChild(NotificationsListPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n      NotificationsListPage\n  ]\n})\nexport class NotificationsPageModule { }\n \n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, LoadingController } from 'ionic-angular';\nimport { Sync } from '../../providers/sync/sync';\r\n\nimport { DataService } from '../../providers/data-service/data-service';\n\n@IonicPage()\n@Component({\n    selector: 'page-notifications',\n    templateUrl: 'notifications.html'\n})\nexport class NotificationsListPage {\n    \n    notifications: any[] = [];\n    userID: string = \"\";    \n    constructor(\n        public navCtrl: NavController,\n        public loadingCtrl: LoadingController,\n        public sync: Sync,\n        public dataService: DataService,\n        public translateService: TranslateService\n    ) {\n    }\n   \n    ionViewDidLoad() {\n        console.log('ionViewDidLoad TimelinePage');\n        this.getNotificationData();\n        \n    }\n    \n    getNotificationData() {\n        this.dataService.getUser().then((user) => {\r\n            this.dataService.getMob_notifications(user.id).then((notifications) => {\r\n                this.notifications = notifications;                \r\n            });\r\n        });\n       \r\n    }\n    syncData() {\r\n        // Our translated text strings\r\n        let syncingLabelString: string = \"\";\r\n        this.translateService.get('SYNCING_LABEL').subscribe((value) => {\r\n            syncingLabelString = value;\r\n        });\r\n\r\n        let loader = this.loadingCtrl.create({\r\n            content: syncingLabelString,\r\n        });\r\n        loader.present();\r\n\r\n        this.sync.syncAllLocalTables().then(function () {\r\n            loader.dismiss();\r\n        });\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts"],"sourceRoot":""}