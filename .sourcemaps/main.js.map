{"version":3,"sources":["../../src/providers/sync/sync.ts","../../src/providers/providers.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/api/api.ts","../../src/providers/location-tracker/location-tracker.ts","../../src/pages/pages.ts","../../src/providers/photo-scan/photo-scan.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/user/user.ts","../../src/providers/util/toast.service.ts","../../src/app/app.component.ts","../../src/providers/data-service/data-service.ts","../../src/providers/util/camera.provider.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../data-service/data-service';\n\ndeclare var WindowsAzure: any;\nvar mobileAppClient, // Connection to the Azure Mobile App backend\r\n    store,  // Sqlite store to use for offline data sync\r\n    syncContext // Offline data sync context\r\n\r\n// Set useOfflineSync to true to use tables from local store.\r\n// Set useOfflineSync to false to use tables on the server.\r\nvar useOfflineSync: boolean = true;\n\nvar tables = {\n    mob_activity: {\n        tblname: 'mob_activity',\n        tbldefinition: {\n            'id': 'string',\n            'a_description': 'string',\n            'a_activityGroup': 'string',\n            'a_nextActivity': 'string',\n            'a_nextActivityDeltaSeconds': 'integer',\n            'a_permitsManualDate': 'boolean',\n            'a_icon': 'string',\n            'a_isFoto': 'boolean',\n            'a_documentTypeId': 'string',\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_events: {\n        tblname: 'mob_events',\n        tbldefinition: {\n            'id': 'string',\r\n            'e_phone': 'string',\r\n            'e_tripid': 'string',\r\n            'e_sequence': 'integer',\r\n            'e_activityId': 'string',\r\n            'e_dtFilledTime': 'date',\r\n            'e_dtDeviceTime': 'date',\r\n            'e_dtGPSTime': 'date',\r\n            'e_longitude': 'string',\r\n            'e_latitude': 'string',\r\n            'e_coordinatesOrigin': 'string',\r\n            'e_placeAddress': 'string',\r\n            'e_placeZip': 'string',\r\n            'e_placeCity': 'string',\r\n            'e_placeNation': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_dispatchers: {\r\n        tblname: 'mob_dispatchers',\n        tbldefinition: {\r\n            'id': 'string',\r\n            'dp_name': 'string',\r\n            'dp_mail': 'string',\r\n            'dp_phone': 'string',\r\n            'dp_group': 'string',\r\n            'deleted': 'boolean',\r\n            'version': 'string'\n        }\r\n    },\r\n    mob_documentTypes: {\n        tblname: 'mob_documentTypes',\n        tbldefinition: {\n            'id': 'string',\r\n            'd_description': 'string',\r\n            'd_group': 'string',\r\n            'd_barcodeRequired': 'boolean',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_messages: {\n        tblname: 'mob_messages',\n        tbldefinition: {\n            'id': 'string',\r\n            'm_objectType': 'string',\r\n            'm_objectKey': 'string',\r\n            'dp_id': 'string',\r\n            'dp_group': 'string',\r\n            'm_dtcreation': 'date',\r\n            'm_status': 'string',\r\n            'm_source': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_messagesTexts: {\n        tblname: 'mob_messagesTexts',\n        tbldefinition: {\n            'id': 'string',\r\n            'ms_messageId': 'string',\r\n            'ms_dtcreation': 'date',\r\n            'ms_sender': 'string',\r\n            'ms_message': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_messagesTextsRead: {\n        tblname: 'mob_messagesTextsRead',\n        tbldefinition: {\n            'id': 'string',\r\n            'ms_messageId': 'string',\r\n            'ms_messageTextId': 'string',\r\n            'ms_user': 'string',\r\n            'ms_dtRead': 'date',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_notifications: {\n        tblname: 'mob_notifications',\n        tbldefinition: {\n            'id': 'string',\r\n            'n_notificationType': 'string',\r\n            'n_notificationMessage': 'string',\r\n            'n_notificationRead': 'date',\r\n            'n_notificationReadUser': 'string',\r\n            'n_notificationUserId': 'integer',\r\n            'm_objectType': 'string',\r\n            'm_objectKey': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_orders: {\n        tblname: 'mob_orders',\n        tbldefinition: {\n            'id': 'string',\r\n            'o_orderCompany': 'integer',\r\n            'o_orderYear': 'integer',\r\n            'o_orderBranch': 'string',\r\n            'o_orderNumber': 'integer',\r\n            'o_description': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_positions: {\n        tblname: 'mob_positions',\n        tbldefinition: {\n            'id': 'string',\r\n            'p_dtCreazion': 'date',\r\n            'p_positionLongitude': 'string',\r\n            'p_positionLatitude': 'string',\r\n            'p_origin': 'string',\r\n            'p_tripId': 'string',\r\n            'p_userId': 'string',\r\n            'p_accurateSettings': 'string',//'p_identity': 'string',            \r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_sharedAuthorization: {\n        tblname: 'mob_sharedAuthorization',\n        tbldefinition: {\n            'id': 'string',\r\n            'sa_objectType': 'string',\r\n            'sa_objectId': 'string',\r\n            'sa_password': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_trip: {\n        tblname: 'mob_trip',\n        tbldefinition: {\n            'id': 'string',\r\n            't_company': 'integer',\r\n            't_year': 'integer',\r\n            't_branch': 'string',\r\n            't_number': 'integer',\r\n            't_dispatcher': 'string',\r\n            't_userID': 'string',\r\n            't_plateTruck': 'string',\r\n            't_plateTrailer': 'string',\r\n            't_aggregationGroup': 'string',\r\n            't_bookingNr': 'string',\r\n            't_dtFirstLoading': 'date',\r\n            't_dtLastUnloading': 'date',\r\n            't_FirstLoadingPlace': 'string',\r\n            't_LastUnloadingPlace': 'string',\r\n            't_mapImage': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_tripDocuments: {\n        tblname: 'mob_tripDocuments',\n        tbldefinition: {\n            'id': 'string',\r\n            'td_tripId': 'string',\r\n            'td_docType': 'string',\r\n            'td_datetime': 'date',\r\n            'td_required': 'bool',\r\n            'tl_orderCompany': 'integer',\r\n            'tl_orderYear': 'integer',\r\n            'tl_orderBranch': 'string',\r\n            'tl_orderNumber': 'integer',\r\n            'tl_orderStop': 'integer',\r\n            'tl_barcode': 'string',\r\n            'td_externalKey': 'string',\r\n            'td_nomeFile': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\n    mob_tripDocumentsImages: {\n        tblname: 'mob_tripDocumentsImages',\n        tbldefinition: {\n            'id': 'string',\r\n            'td_TripDocumentsId': 'string',\r\n            'td_document': 'string',\r\n            'td_note': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_tripGoods: {\n        tblname: 'mob_tripGoods',\n        tbldefinition: {\n            'id': 'string',\r\n            'tg_TripId': 'string',\r\n            'tg_description': 'string',\r\n            'tg_quantity': 'integer',\r\n            'tg_uom': 'string',\r\n            'tg_width': 'float',\r\n            'tg_height': 'float',\r\n            'tg_length': 'float',\r\n            'tg_orderId': 'string',\r\n            'tg_orderStop': 'integer',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_tripTimeLine: {\n        tblname: 'mob_tripTimeLine',\n        tbldefinition: {\n            'id': 'string',\r\n            'tl_tripId': 'string',\r\n            'tl_sequence': 'integer',\r\n            'tl_dtTimeEstimate': 'date',\r\n            'tl_dtTimeEffective': 'date',\r\n            'tl_activityId': 'string',\r\n            'tl_orderId': 'string',\r\n            'tl_orderStop': 'integer',\r\n            'tl_longitude': 'string',\r\n            'tl_latitude': 'string',\r\n            'tl_placeDescription': 'string',\r\n            'tl_placeAddress': 'string',\r\n            'tl_placeZip': 'string',\r\n            'tl_placeCity': 'string',\r\n            'tl_placeNation': 'string',\r\n            'tl_notes': 'string',\r\n            'tl_dtInsert': 'date',\r\n            'tl_externalKey': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_user: {\n        tblname: 'mob_user',\n        tbldefinition: {\n            'id': 'string',\r\n            'u_phone': 'string',\r\n            'u_name': 'string',\r\n            'u_language': 'string',\r\n            'u_lastLogin': 'date',\r\n            'u_photo': 'object',\r\n            'u_identity': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_userCompany: {\n        tblname: 'mob_userCompany',\n        tbldefinition: {\n            'id': 'string',\r\n            'uc_userId': 'string',\r\n            'uc_company': 'string',\r\n            'uc_codedip': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_userRegistrations: {\n        tblname: 'mob_userRegistrations',\n        tbldefinition: {\n            'id': 'string',\r\n            'ur_phone': 'string',\r\n            'ur_identity': 'string',\r\n            'ur_verificationCode': 'string',\r\n            'ur_datetimeRequest': 'date',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    },\r\n    mob_userSettings: {\n        tblname: 'mob_userSettings',\n        tbldefinition: {\n            'id': 'string',\r\n            'set_UserId': 'string',\r\n            'set_key': 'string',\r\n            'set_value': 'string',\r\n            'deleted': 'boolean',\n            'version': 'string'\n        }\r\n    }\r\n\r\n};\n\n@Injectable()\nexport class Sync {\n    userId: string = \"\";\n\n    constructor(public dataService: DataService) {\n\n    }\n\n    /**\n      This function is use for the sync all relevant data of registered user with local sqlite database.\n      ** Call this function only if device is ready..\n    */\n    initializeTables() {\n\n        //mobileAppClient = new WindowsAzure.MobileServiceClient(\"http://192.168.4.142:8089\");\n        mobileAppClient = new WindowsAzure.MobileServiceClient(\"https://gruberapidev.azurewebsites.net\");\n\r\n        return this.dataService.getUserFromLocalStorage().then((res) => {\r\n            console.log('local user data: ', res);\r\n            this.userId = res.id;\r\n\r\n            mobileAppClient.currentUser = {\r\n                userId: this.userId,\r\n                mobileServiceAuthenticationToken: res.auth_token.toString()\r\n            };\r\n            return this.initializeStore();\r\n        });\n    }\n\n    /**\r\n    * Initialize local tables.\r\n    */\n    initializeStore() {\n\n        // Create the sqlite store\r\n        store = new WindowsAzure.MobileServiceSqliteStore('gruber.db');\r\n        console.log('initializing store');\r\n        // Define the table schema\r\n        return this.initTableWithSync(tables.mob_activity.tblname, tables.mob_activity.tbldefinition)\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_dispatchers.tblname, tables.mob_dispatchers.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_documentTypes.tblname, tables.mob_documentTypes.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_messages.tblname, tables.mob_messages.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_messagesTexts.tblname, tables.mob_messagesTexts.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_messagesTextsRead.tblname, tables.mob_messagesTextsRead.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_notifications.tblname, tables.mob_notifications.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_orders.tblname, tables.mob_orders.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_positions.tblname, tables.mob_positions.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_sharedAuthorization.tblname, tables.mob_sharedAuthorization.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_trip.tblname, tables.mob_trip.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_tripDocuments.tblname, tables.mob_tripDocuments.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_tripDocumentsImages.tblname, tables.mob_tripDocumentsImages.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_tripGoods.tblname, tables.mob_tripGoods.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_tripTimeLine.tblname, tables.mob_tripTimeLine.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_events.tblname, tables.mob_events.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_user.tblname, tables.mob_user.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_userRegistrations.tblname, tables.mob_userRegistrations.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_userSettings.tblname, tables.mob_userSettings.tbldefinition);\n            })\n            .then((result) => {\n                return this.initTableWithSync(tables.mob_userCompany.tblname, tables.mob_userCompany.tbldefinition);\n            })\n            .then(function () {\n                return true;\n            });\n    }\n\n    /**\r\n    * Initialize local table with sync to pull or push data from server.    \r\n    */\n    initTableWithSync(tableName, tableDefinition) {\n\n        console.log('initializing table', tableName);\n\n        return store.defineTable({\r\n            name: tableName, // tableName\r\n            columnDefinitions: tableDefinition\r\n        })\r\n            .then(function () {\r\n                // Initialize the sync context\r\n                syncContext = mobileAppClient.getSyncContext();\r\n\r\n                // Define an overly simplified push handler that discards\r\n                // local changes whenever there is an error or conflict.\r\n                // Note that a real world push handler will have to take action according\r\n                // to the nature of conflict.\r\n                syncContext.pushHandler = {\r\n                    //onConflict: this.onConflict,\r\n                    onConflict: function (pushError) {\r\n                        console.log('onConflict', pushError);\r\n                        return pushError.cancelAndDiscard();\r\n                    },\r\n                    onError: function (pushError) {\r\n                        // Treat 404 as a conflict. This can happen if server deletes a record and client pushes an updated value of the record\r\n                        if (pushError.getError().request.status === 404) {\r\n                            return this.onConflict(pushError, 'server');\r\n                        }\r\n                        console.log('status', pushError.getError().request.status);\r\n                        console.log('getClientRecord', pushError.getClientRecord());\r\n                        console.log('getError', pushError.getError());\r\n                        console.log('getTableName', pushError.getTableName());\r\n                        console.log('getAction', pushError.getAction());\r\n\r\n                        console.log('getServerRecord', pushError.getServerRecord());\r\n                        pushError.isHandled = true;\r\n\r\n                        console.log(tableName, JSON.stringify(tableDefinition));\r\n                        console.log('onError', JSON.stringify(pushError));\r\n                        return this.handleError(pushError, 'Encountered error while pushing change to server. Possibly connectivity issue!');\r\n                    }\r\n                };\r\n                return syncContext.initialize(store);\r\n            });\n    }\n\n    /**\r\n    * Synchronize local table with the table on the server.\r\n    * We do this by pushing local changes to the server and then\r\n    * pulling the latest changes from the server.\r\n    */\r\n    syncLocalTable(syncTableName) {\r\n        console.log('sync local table', syncTableName);\r\n\r\n        //#101 - Incremental Sync\r\n        return syncContext.pull(new WindowsAzure.Query(syncTableName), syncTableName + \"_FULL\");\r\n    }\n\n    /**\r\n   * Push local table data to table on the server.\r\n    It will not pull data from the server and sync with local tables..\r\n   */\r\n    pushLocalTablesData() {\r\n        console.log('push local tables to server');\r\n        return syncContext.push();\r\n    }\n\n    /**\r\n    * Sync all tables of local database table\r\n    */\n    syncAllLocalTables() {\n        // sync all tables\n        console.log('sync all tables');\n        //alert('sync complete');\n        return this.initializeTables().then((res) => {\r\n            return this.pushLocalTablesData();\r\n        })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_activity.tblname);\n            })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_dispatchers.tblname);\n            })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_documentTypes.tblname);\n            })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_messages.tblname);\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTexts.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTextsRead.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_notifications.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_orders.tblname);\r\n            })\n            //.then((result) => { \r\n            //// no need to get data from this table. One side - APP -> Azure\r\n            //    return this.syncLocalTable(tables.mob_positions.tblname);\r\n            //})\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_sharedAuthorization.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_trip.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripDocuments.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripDocumentsImages.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripGoods.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripTimeLine.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_user.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_userCompany.tblname);\r\n            })\n            //.then((result) => {\r\n            //    return this.syncLocalTable(tables.mob_userRegistrations.tblname);\r\n            //})\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_userSettings.tblname);\r\n            });\n\n    }\n\n    syncMessageRelatedLocalTables() {\n        // sync all tables\n        return this.initializeTables().then((res) => {\r\n            return this.pushLocalTablesData();\r\n        })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_dispatchers.tblname);\n            })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_messages.tblname);\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTexts.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTextsRead.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_notifications.tblname);\r\n            });\n    }\n\n    syncMessageTextsRelatedLocalTables() {\n        return this.pushLocalTablesData()\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTexts.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_messagesTextsRead.tblname);\r\n            })\n    }\n\n    syncTripRelatedLocalTables() {\n        // sync all tables\n        return this.initializeTables().then((res) => {\r\n            return this.pushLocalTablesData();\r\n        })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_activity.tblname);\n            })\r\n            .then((result) => {\n                return this.syncLocalTable(tables.mob_documentTypes.tblname);\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_orders.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_trip.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripDocuments.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripDocumentsImages.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripGoods.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_tripTimeLine.tblname);\r\n            });\n    }\n\n    syncUserRelatedLocalTables() {\n        // sync all tables\n        return this.pushLocalTablesData()\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_sharedAuthorization.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_user.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_userCompany.tblname);\r\n            })\n            .then((result) => {\r\n                return this.syncLocalTable(tables.mob_userSettings.tblname);\r\n            });\n    }\n\n    getTableData(tableName, filterParams?: any) {\n        var tableData;\n        if (filterParams) {\n            filterParams.deleted = false;\n        } else {\n            filterParams = { deleted: false };\n        }\n\n        // Create a table reference\r\n        if (useOfflineSync) {\r\n            tableData = mobileAppClient.getSyncTable(tableName);\r\n        } else {\r\n            tableData = mobileAppClient.getTable(tableName);\r\n        }\r\n        syncContext.pushHandler = {\r\n            onConflict: function (pushError) {\r\n                // Handle the conflict.\r\n                console.log(\"Sync conflict! \" + pushError.getError().message);\r\n                // Update failed, revert to server's copy.\r\n                pushError.cancelAndDiscard();\r\n            },\r\n            onError: function (pushError) {\r\n                // Handle the error\r\n                // In the simulated offline state, you get \"Sync error! Unexpected connection failure.\"\r\n                console.log(\"Sync error! \" + pushError.getError().message);\r\n            }\r\n\n        }\n        return tableData\r\n            .where(filterParams)\r\n            .read()                         // Read the results\r\n            .then((data) => {\r\n                //alert(tableName + ' offline : ' + data.length);\r\n                return data;\r\n            });\n    }\n\n    getTableReference(tableName) {\n        // Create a table reference\r\n        if (useOfflineSync) {\r\n            return mobileAppClient.getSyncTable(tableName);\r\n        } else {\r\n            return mobileAppClient.getTable(tableName);\r\n        }\n    }\n\n    insertTableRow(tableName, record) {\n        var table = this.getTableReference(tableName);\n        return table.insert(record)\n            .then((result) => {\n                this.pushLocalTablesData().then((res) => {\n                    this.syncLocalTable(tableName);\n                });\n                return result;\n            }, (error) => {\n                alert(JSON.stringify(error));\n                return error;\n            });\n    }\n\n    updateTableRow(tableName, record) {\n        var table = this.getTableReference(tableName);\n        return table.update(record)\n            .then((result) => {\n                this.pushLocalTablesData().then((res) => {\n                    this.syncLocalTable(tableName);\n                });\n                return result;\n            }, (error) => {\n                console.log(JSON.stringify(error));\n                return error;\n            });\n    }\n\n    deleteTableRow(tableName, record) {\n        var table = this.getTableReference(tableName);\n        return table.del(record)\n            .then((result) => {\n                this.pushLocalTablesData().then((res) => {\n                    this.syncLocalTable(tableName);\n                });\n                return result;\n            }, (error) => {\n                alert(JSON.stringify(error));\n                return error;\n            });\n    }\n\n    onConflict(pushError, whoIsMaster) {\r\n\r\n        switch (pushError.getAction()) {\r\n            case 'insert':\r\n                return this.handleInsertConflict(pushError);\r\n            case 'update':\r\n                return this.handleUpdateConflict(pushError, whoIsMaster);\r\n            case 'delete':\r\n                return this.handleDeleteConflict(pushError);\r\n        }\r\n\r\n        return this.handleError(pushError, 'Unhandled conflict!')\r\n    }\n\n    handleInsertConflict(pushError) {\r\n        // As the record ID is a GUID, a conflict here means that the client\r\n        // pushed the record to the server in the past but the change was \r\n        // not removed from the pending operations queue, thus pushing it again.\r\n        // We simply cancel this change from being pushed again.\r\n        return pushError.cancel();\r\n    }\n\r\n    handleUpdateConflict(pushError, whoIsMaster) {\r\n        var serverRecord = pushError.getServerRecord(),\r\n            clientRecord = pushError.getClientRecord(),\r\n            status = pushError.getError().request.status;\r\n\r\n        if (status === 404) { // Either the server record never existed or has been deleted\r\n            // In either case, we cancel the update.\r\n            return pushError.cancelAndDiscard();\r\n        }\r\n\r\n        if (serverRecord && clientRecord) { // Server and client have conflicting changes to the record\r\n\r\n            // If the client and server records are identical, just ignore\r\n            // the conflict and discard the pending change\r\n            if (serverRecord.deleted === clientRecord.deleted) {\r\n                return pushError.cancelAndDiscard();\r\n            }\r\n\r\n            // Involve the user in conflict resolution\r\n            return (function (result) {\r\n                if (whoIsMaster === 'skip') { // skip resolving this conflict\r\n                    return;\r\n                }\r\n\r\n                if (whoIsMaster === 'server') { // use the server value to resolve the conflict\r\n                    return pushError.cancelAndUpdate(serverRecord);\r\n                }\r\n\r\n                if (whoIsMaster === 'client') { // use the client value to resolve the conflict\r\n                    result = clientRecord;\r\n                } else { // if result is not one of 'server', 'client', 'skip', we assume the user has provided a custom value for the record\r\n                    result.id = serverRecord.id; // The custom value specified by the user need not have ID. We set it explicitly\r\n                }\r\n\r\n                result.version = serverRecord.version; // Update the version in the record to match the server version\r\n                return pushError.update(result);\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDeleteConflict(pushError) {\r\n\r\n        var status = pushError.getError().request.status,\r\n            serverRecord = pushError.getServerRecord();\r\n\r\n        // If the server record never existed, status code will be 404\r\n        // If the server record has been deleted, the status code could be 404, 409 or 412 based on the scenario\r\n        // The node and .net backends need to be fixed so that the behavior be consistent.\r\n        // For now, we simply check for all possible status codes\r\n        if (status === 404 || status === 409 || (status === 412 && serverRecord.deleted)) {\r\n            return pushError.cancelAndDiscard();\r\n        }\r\n\r\n        // server updated, client deleted. so discard client change and update client record as per server value\r\n        if (status === 412 && !serverRecord.deleted) {\r\n            return pushError.changeAction('update', serverRecord);\r\n        }\r\n\r\n        return this.handleError(pushError, 'All possible errors were handled. We do not expect to be here ever!');\r\n    }\n\n    handleError(pushError, message) {\r\n        return pushError.cancelAndDiscard();\r\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sync/sync.ts","import { Api } from './api/api';\n//import { Items } from '../mocks/providers/items';\n//import { Settings } from './settings/settings';\nimport { User } from './user/user';\nimport { ToastService } from './util/toast.service';\nimport { CameraProvider } from './util/camera.provider';\n \nexport {\n    Api,\n    //Items,\n    //Settings,\n    User,\n    ToastService,\n    CameraProvider \n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 122;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 122\n// module chunks = 13","var map = {\n\t\"../pages/activity-details/activity-details.module\": [\n\t\t314,\n\t\t12\n\t],\n\t\"../pages/activity-list/activity-list.module\": [\n\t\t315,\n\t\t11\n\t],\n\t\"../pages/chat-contacts/chat-contacts.module\": [\n\t\t316,\n\t\t1\n\t],\n\t\"../pages/chat/chats.module\": [\n\t\t317,\n\t\t0\n\t],\n\t\"../pages/chat/messages/messages.module\": [\n\t\t318,\n\t\t2\n\t],\n\t\"../pages/confirm-activity/confirm-activity.module\": [\n\t\t319,\n\t\t10\n\t],\n\t\"../pages/current-activity/current-activity.module\": [\n\t\t320,\n\t\t9\n\t],\n\t\"../pages/document-scan/document-scan.module\": [\n\t\t326,\n\t\t3\n\t],\n\t\"../pages/login/login.module\": [\n\t\t321,\n\t\t4\n\t],\n\t\"../pages/notifications/notifications.module\": [\n\t\t322,\n\t\t8\n\t],\n\t\"../pages/picture-upload/picture-upload.module\": [\n\t\t323,\n\t\t7\n\t],\n\t\"../pages/profile/profile.module\": [\n\t\t324,\n\t\t6\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t325,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 177;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 177\n// module chunks = 13","import { HttpClient, HttpParams, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n \n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n    url: string = 'https://gruberapidev.azurewebsites.net';\r\n    //url: string = 'http://192.168.4.142:8089';    \r\n    token: any;\n    \n    constructor(public http: HttpClient) {\n        this.token = \"\";\n    }\n    // Custom method to add standard headers.\r\n    public _addStandardHeaders(header: HttpHeaders) {\r\n        header = header.append('Content-Type', 'application/json');\r\n        header = header.append('Accept', 'application/json');\r\n        header = header.append('Access-Control-Allow-Orgin', '*');  \r\n        //header = header.append('ZUMO-API-VERSION', '2.0.0');  \r\n                 \r\n        return header;\r\n    }\n\n    // custom method to initialize reqOpts\r\n    public _initializeReqOpts(reqOpts) {\r\n        if (!reqOpts) {\r\n            reqOpts = {\r\n                headers: new HttpHeaders(),\r\n                params: new HttpParams()\r\n            };\r\n        }\r\n        return reqOpts;\r\n    }\n    get(endpoint: string, params?: any, reqOpts?: any) {\n        if (!reqOpts) {\n            reqOpts = {\n                params: new HttpParams()\n            };\n        }\n\n        // Support easy query params for GET requests\n        if (params) {\n            reqOpts.params = new HttpParams();\n            for (let k in params) {\n                reqOpts.params.set(k, params[k]);\n            }\n        }\n\n        return this.http.get(this.url + '/' + endpoint, reqOpts);\n    }\n\n    post(endpoint: string, body: any, reqOpts?: any) {   \n        return this.http.post(this.url + '/' + endpoint, body, reqOpts);\n    }\n\n    put(endpoint: string, body: any, reqOpts?: any) {\n        return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n    }\n\n    delete(endpoint: string, reqOpts?: any) {\n        return this.http.delete(this.url + '/' + endpoint, reqOpts);\n    }\n\n    patch(endpoint: string, body: any, reqOpts?: any) {\n        return this.http.put(this.url + '/' + endpoint, body, reqOpts);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","import { Injectable } from '@angular/core';\r\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { Sync } from '../sync/sync';\r\nimport { DataService } from '../data-service/data-service';\r\n\r\nimport 'rxjs/add/operator/filter';\r\n\r\n\r\n@Injectable()\r\nexport class LocationTracker {\r\n\r\n    user = {\r\n        id: \"\",\r\n        auth_token: \"\"\r\n    };\r\n\r\n    constructor(\r\n        public backgroundGeolocation: BackgroundGeolocation,\r\n        public geolocation: Geolocation,\r\n        public sync: Sync,\r\n        public dataService: DataService\r\n    ) {\r\n\r\n        this.dataService.getUserFromLocalStorage().then((res) => {\r\n            this.user = res;\r\n        });\r\n\r\n    }\r\n\r\n    saveMobilePosition(location) {\r\n\r\n        var mob_positionsTable = this.sync.getTableReference('mob_positions');\r\n        mob_positionsTable.insert({\r\n            p_dtCreazion: new Date(),\r\n            p_positionLatitude: location.latitude,\r\n            p_positionLongitude: location.longitude,\r\n            p_origin: 'PHONE',\r\n            p_tripId: '',\r\n            p_userId: this.user.id,\r\n            p_accurateSettings: ''\r\n            //p_identity: ''\r\n            //p_identity: location.serviceProvider\r\n        }).then((result) => {\r\n\r\n            this.sync.pushLocalTablesData();\r\n        }, function (error) {\r\n            alert('error :' + error);\r\n        });\r\n    }\r\n\r\n    startTracking() {\r\n        // Get a reference to the plugin.\r\n        var bgGeo = (<any>window).BackgroundGeolocation;\r\n        //This callback will be executed every time a geolocation is recorded in the background.\r\n        var callbackFn = (location) => {\r\n            console.log('- Location: ', JSON.stringify(location));\r\n            this.saveMobilePosition(location);\r\n        };\r\n\r\n        // This callback will be executed if a location-error occurs. \r\n        // Eg: this will be called if user disables location- services.\r\n        var failureFn = (errorCode) => {\r\n            //alert('- BackgroundGeoLocation error: ' + errorCode);\r\n        }\r\n        // Listen to location events & errors.\r\n        bgGeo.on('location', callbackFn, failureFn);\r\n        // Fired whenever state changes from moving->stationary or vice-versa.\r\n        bgGeo.on('motionchange', (isMoving) => {\r\n            console.log('- onMotionChange: ', isMoving);\r\n            //alert('- onMotionChange: ' + isMoving);\r\n        });\r\n\r\n        // Fired whenever a geofence transition occurs.\r\n        bgGeo.on('geofence', (geofence) => {\r\n            console.log('- onGeofence: ', geofence.identifier, geofence.location);\r\n        });\r\n\r\n        // Fired whenever an HTTP response is received from your server.\r\n        bgGeo.on('http', (response) => {\r\n            console.log('http success: ', response.responseText);\r\n\r\n            //alert('http success: ' + response.responseText);\r\n        }, (response) => {\r\n            console.log('http failure: ', response.status);\r\n            //alert('http success: ' + response.responseText);\r\n        });\r\n\r\n        // BackgroundGeoLocation is highly configurable.\r\n        bgGeo.configure({\r\n            // Geolocation config\r\n            desiredAccuracy: 0,\r\n            distanceFilter: 10,\r\n            stationaryRadius: 25,\r\n            // Activity Recognition config\r\n            activityRecognitionInterval: 10000,\r\n            stopTimeout: 5,\r\n            // Application config\r\n            debug: true,  // <-- Debug sounds & notifications.\r\n            stopOnTerminate: false,\r\n            startOnBoot: true,\r\n            // HTTP / SQLite config\r\n            url: \"https://gruberapidev.azurewebsites.net/POST_MobilePositions\",\r\n            method: \"POST\",\r\n            autoSync: true,\r\n            maxDaysToPersist: 3,\r\n            headers: {  // <-- Optional HTTP headers\r\n                \"ZUMO-API-VERSION\": \"2.0.0\",\r\n                \"X-ZUMO-AUTH\": this.user.auth_token\r\n            },\r\n            params: {   // <-- Optional HTTP params                \r\n            }\r\n        }, (state) => {\r\n            // This callback is executed when the plugin is ready to use.\r\n            console.log(\"BackgroundGeolocation ready: \", state);\r\n            if (!state.enabled) {\r\n                bgGeo.start();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getCurrentLocation() {\r\n         \r\n        let location: any = {};\r\n        location = {\r\n            latitude: '',\r\n            longitude: '',\r\n            coordinatesOrigin: \"GPS\",\r\n            coordinatesDatetime: new Date()\r\n        };\r\n        this.geolocation.getCurrentPosition().then((pos) => {\r\n\r\n            location.latitude = pos.coords.latitude;\r\n            location.longitude = pos.coords.longitude;\r\n            location.coordinatesDatetime = new Date()\r\n            return location;\r\n        }).catch((error) => {\r\n            console.log('Error getting location', error);\r\n        });\r\n        return location;\r\n\r\n    }\r\n\r\n    stopTracking() {\r\n        console.log('stopTracking');\r\n        this.backgroundGeolocation.finish();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/location-tracker/location-tracker.ts","// The page the user lands on after opening the app and without a session\nexport const LoginPage = 'LoginPage';\n\n// The main page the user will see as they use the app over a long period of time.\n// Change this if not using tabs\nexport const MainPage = 'ProfilePage';\n\n////// The initial root pages for our tabs (remove if not using tabs)\n//export const Tab1Root = 'ProfilePage';\n//export const Tab2Root = 'ProfilePage';\n//export const Tab3Root = 'ProfilePage';\n \n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from 'ionic-angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { CameraProvider } from '../../providers/util/camera.provider';\n\n@Injectable()\n\nexport class PhotoScanService {\r\n    constructor(\r\n        public loadingCtrl: LoadingController,\r\n        private barcodeScanner: BarcodeScanner,\r\n        public cameraProvider: CameraProvider,\r\n    ) { }\n\n    scanBarcode() {\r\n        const options = {\n            preferFrontCamera: false, // iOS and Android\n            showFlipCameraButton: true, // iOS and Android\n            showTorchButton: true, // iOS and Android\n            torchOn: false, // Android, launch with the torch switched on (if available)\n            prompt: 'Place a barcode inside the scan area', // Android\n            // Android, display scanned text for X ms. 0 suppresses it entirely, default 1500\n            resultDisplayDuration: 500,\n            //formats: 'QR_CODE,PDF_417', // default: all but PDF_417 and RSS_EXPANDED\n            // Android only (portrait|landscape), default unset so it rotates with the device\n            orientation: 'portrait',\n            disableAnimations: true, // iOS\n            disableSuccessBeep: false // iOS\n        };\n        \r\n        return this.barcodeScanner.scan(options).then((barcodeData) => {            \r\n            return barcodeData;\r\n        }, (err) => {\r\n            return err;\r\n        });\r\n    }\n\n    takePicture() {\r\n        const loading = this.loadingCtrl.create();\r\n        loading.present();\r\n        return this.cameraProvider.getPictureFromCamera().then(picture => {\r\n            loading.dismiss();\r\n            return picture;\r\n        }, error => {\r\n            alert(error);\r\n            return error;\r\n        });\r\n    }\r\n\r\n    getPicture() {\r\n        const loading = this.loadingCtrl.create();\r\n        loading.present();\r\n        return this.cameraProvider.getPictureFromPhotoLibrary().then(picture => {\r\n            loading.dismiss();\r\n            return picture;\r\n        }, error => {\r\n            alert(error);\r\n            return error;\r\n        });\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/photo-scan/photo-scan.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts"," \r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Camera } from '@ionic-native/camera';\nimport { CameraProvider } from '../providers/util/camera.provider';\nimport { Device } from '@ionic-native/device';\n \nimport { CallNumber } from '@ionic-native/call-number';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { AndroidPermissions} from '@ionic-native/android-permissions';\n\nimport { LocationTracker } from '../providers/location-tracker/location-tracker';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n\n//import { GoogleMaps } from '@ionic-native/google-maps';\nimport { BackgroundMode } from '@ionic-native/background-mode';\n \n\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule} from '@ionic/storage';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { Push, PushObject, PushOptions } from '@ionic-native/push';\n\n//import { Items } from '../mocks/providers/items';\n//import { Settings } from '../providers/providers';\nimport { User } from '../providers/providers';\nimport { Api } from '../providers/providers';\nimport { MyApp } from './app.component';\nimport { Sync } from '../providers/sync/sync';\nimport { DataService } from '../providers/data-service/data-service';\nimport { PhotoScanService } from '../providers/photo-scan/photo-scan';\n\n//import { NativeGoogleMapsProvider } from '../providers/native-google-maps/native-google-maps';\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n//export function provideSettings(storage: Storage) {\n//    /**\n//     * The Settings provider takes a set of default settings for your app.\n//     *\n//     * You can add new settings options at any time. Once the settings are saved,\n//     * these values will not overwrite the saved values (this can be done manually if desired).\n//     */\n//    return new Settings(storage, {\n//        option1: true,\n//        option2: 'Ionitron J. Framework',\n//        option3: '3',\n//        option4: 'Hello'\n//    });\n//}\n\n\r\n\n@NgModule({\n    declarations: [\n        MyApp      \n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,       \n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        IonicModule.forRoot(MyApp),\n        IonicStorageModule.forRoot()\n     \n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp\n    ],\n    providers: [\n        TranslateService,\n        LocationTracker,\r\n        BackgroundGeolocation,\r\n        Geolocation,\n        Api,        \n        User,\n        Camera,\n        CameraProvider,\n        Device,\n        SplashScreen,\n        CallNumber,\n        BarcodeScanner,       \n        StatusBar,\n        SQLite,   \r\n        AndroidPermissions,    \r\n        BackgroundMode,\n        Sync, \n        DataService,                        \n        PhotoScanService,\n        Push,\n        //{ provide: Settings, useFactory: provideSettings, deps: [Storage] },\n        // Keep this to enable Ionic's runtime error handling during development\n        { provide: ErrorHandler, useClass: IonicErrorHandler }\n    ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/share'\n\nimport { Injectable } from '@angular/core';\nimport { Api } from '../api/api';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n    _user: any;\n\n    constructor(public api: Api) { }\n     \n    /**\n    * Send a POST request to our Login/Register and Verify user endpoint with the data\n    * the user entered on the form.\n    */\n    authenticate(accountInfo: any) {\n        let seq = this.api.post('Mobile_authentication?ZUMO-API-VERSION=2.0.0', accountInfo).share();\n        seq.subscribe((res: any) => {\n            //// If the API returned a successful response, mark the user as logged in\n            //if (res.status == 'success') {\n            //    this._user = res.user;\n            //}\n        }, err => {\n            console.error('ERROR', err);\n        });\n        return seq;\n    }\n\n    /**\n     * Log the user out, which forgets the session\n     */\n    logout() {\n        this._user = null;\n    }\n\n    /**\n     * Process a login/signup response to store user data\n     */\n    _loggedIn(resp) {\n        this._user = resp.user;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { Injectable } from '@angular/core';\nimport { Toast, ToastController } from 'ionic-angular';\n\n@Injectable()\nexport class ToastService {\n\n  toast: Toast;\n  constructor(public toastCtrl: ToastController) { }\n\n  create(message, ok = false, duration = 2000) {\n    if (this.toast) {\n      this.toast.dismiss();\n    }\n\n    this.toast = this.toastCtrl.create({\n      message,\n      duration: ok ? null : duration,\n      position: 'bottom',\n      showCloseButton: ok,\n      closeButtonText: 'OK'\n    });\n    this.toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/util/toast.service.ts","import { Component, ViewChild } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Config, Nav, Platform, ToastController, LoadingController } from 'ionic-angular';\nimport { BackgroundMode } from '@ionic-native/background-mode';\r\n\nimport { Events } from 'ionic-angular';\n \nimport { LoginPage, MainPage } from '../pages/pages';\n//import { Settings } from '../providers/providers';\n\nimport { DataService } from '../providers/data-service/data-service';\n\n@Component({\n    template: `<ion-nav #content [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n    rootPage: any;\n\n    @ViewChild(Nav) nav: Nav;\n\n    pages: any[] = [\n        { title: 'LoginPage', component: 'LoginPage' },        \n        { title: 'ProfilePage', component: 'ProfilePage' }\n    ]\n\n    private isInstantiated: boolean;\n    constructor(       \n        private translate: TranslateService,\n        private platform: Platform,\n        private config: Config,\n        private statusBar: StatusBar,\n        private splashScreen: SplashScreen,\n        private backgroundMode: BackgroundMode,\n        public toastCtrl: ToastController,\n        public loadingCtrl: LoadingController,\n        public dataService: DataService,\r\n        public events: Events\n        ) {\n\n        this.initTranslate();\n\n        if (!this.isInstantiated) {\r\n\r\n            platform.ready().then(() => {\r\n\r\n                //To Enable Backgroud mode for prevent to close app.\r\n                if (!this.backgroundMode.isActive()) {\r\n                    this.backgroundMode.enable();\r\n                    //this.backgroundMode.excludeFromTaskList();\r\n                    this.backgroundMode.disableWebViewOptimizations();\r\n                }\r\n\r\n                this.isInstantiated = true;\r\n                // Okay, so the platform is ready and our plugins are available.\n                // Here you can do any higher level native things you might need.\n                //this.statusBar.styleDefault();\n\n                this.statusBar.backgroundColorByHexString('#077f7f');\n\n                //back button handle\r\n                //Registration of push in Android and Windows Phone\r\n                var lastTimeBackPress = 0;\r\n                var timePeriodToExit = 2000;\r\n\r\n                platform.registerBackButtonAction(() => {\r\n                    // get current active page\r\n                    let view = this.nav.getActive();\r\n                    if (view.component.name == \"ProfilePage\" || view.component.name == \"LoginPage\") {\r\n                        //Double check to exit app\r\n                        if (new Date().getTime() - lastTimeBackPress < timePeriodToExit) {\r\n                            //this.platform.exitApp(); //Exit from app    \r\n                            this.backgroundMode.overrideBackButton();\r\n                        } else {\r\n                            let toast = this.toastCtrl.create({\r\n                                message: 'Press back again to exit app?',\r\n                                duration: 3000,\r\n                                position: 'bottom'\r\n                            });\r\n                            toast.present();\r\n                            lastTimeBackPress = new Date().getTime();\r\n                        }\r\n                    } else {\r\n                        // go to previous page\r\n                        this.nav.pop({});\r\n                    }\r\n                });\n\n                this.dataService.getUser().then((user) => {                     \n                    if (user != null && user.id != null) {\n                        //this.dataService.getUserFromLocalStorage().then((user) => {\n                        //    console.log('local storage: ', user);\n                        //});\n                        this.rootPage = MainPage;\n\n                        this.splashScreen.hide();\r\n                        //// Set in local storage for get or set user data.\r\n                        //this.dataService.setUserInLocalStorage(user).then(() => {\n                        //    //this.nav.setRoot('ProfilePage', { isFirstTimeLogin: false }, { animate: true, direction: 'forward' });\n                        //});\n                    }\n                    else {\n                        this.rootPage = LoginPage;\n                        this.splashScreen.hide();\n                    }\n                });\n                                  \r\n            });\r\n        }\n\n    }\n\n\n    ionViewDidLoad() {\n     \n    }\n\n    initTranslate() {\r\n        // Set the default language for translation strings, and the current language.\r\n\r\n        this.translate.setDefaultLang('en');\r\n        this.translate.use('en');\r\n\r\n        this.dataService.getUser().then((response) => {\r\n            if (response != null && response.u_language != null && response.u_language != \"\") {                \r\n                this.translate.setDefaultLang(response.u_language); // Set your language here\r\n                this.translate.use(response.u_language); // Set your language here\r\n            }\r\n        });\r\n\r\n        this.events.subscribe('changeUserLanguage', (langId) => {\r\n            this.translate.setDefaultLang(langId);\r\n            this.translate.use(langId);\r\n        });\r\n\r\n        this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\r\n            this.config.set('ios', 'backButtonText', values.BACK_BUTTON_TEXT);\r\n        });\r\n    }\n\n    openPage(page) {\n        // Reset the content nav to have just this page\n        // we wouldn't want the back button to show in this scenario\n        this.nav.setRoot(page.component);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\r\nimport { Promise } from 'es6-promise';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private sDBName: string = 'gruber.db';\r\n\r\n    constructor(private sqlite: SQLite, public storage: Storage) {\r\n\r\n    }\r\n\r\n    getMob_UserSettings() {\r\n        let query: string = \"SELECT * FROM mob_userSettings WHERE deleted=0\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_notifications(Id: string) {\r\n        let query: string = \"SELECT * FROM mob_notifications WHERE deleted=0 AND m_objectKey=? ORDER BY n_notificationRead ASC\";\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_dispatchers() {\r\n        let query: string = \"SELECT * FROM mob_dispatchers WHERE deleted=0 ORDER BY dp_name ASC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_messages() {\r\n        let query: string = \"SELECT * FROM Mob_messages WHERE deleted=0 ORDER BY rowid DESC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_messagesByDp_id(dp_id: string, m_objectKey: string) {\r\n        let query: string = \"SELECT * FROM Mob_messages WHERE deleted=0 AND dp_id =? AND m_objectKey=? LIMIT 1\";\r\n        return this.execSqlCustom(query, [dp_id, m_objectKey]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_messagesByObjectKey(m_objectKey: string) {\r\n        let query: string = \"SELECT * FROM Mob_messages WHERE deleted=0 AND m_objectKey =?\";\r\n        return this.execSqlCustom(query, [m_objectKey]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getChatsByDp_id(dp_id: string) {\r\n        let query: string = \"Select *, \" +\r\n            \"     ifnull( \" +\r\n            \"         (SELECT dp_name FROM mob_dispatchers WHERE  Deleted = 0 AND Mob_messages.m_objectType = 'User' AND mob_dispatchers.Id = Mob_messages.m_objectKey LIMIT 1) \" +\r\n            \"     , \" +\r\n            \"     (SELECT cast(Mob_trip.t_company AS text) || '-' || cast(Mob_trip.t_number AS text) || '/' || \" +\r\n            \"         cast(Mob_trip.t_branch  AS text) || '/' || cast(Mob_trip.t_year  AS text) FROM Mob_trip WHERE  Deleted = 0 AND Mob_messages.m_objectType = 'Trip' AND Mob_trip.Id = Mob_messages.m_objectKey LIMIT 1)  \" +\r\n            \" ) as dispatcherName, \" +\r\n            \"     (SELECT ms_message FROM Mob_messagesTexts WHERE Deleted = 0 AND Mob_messagesTexts.ms_messageId = Mob_messages.Id \" +\r\n            \" ORDER BY ms_dtcreation DESC LIMIT 1) as lastMessage, \" +\r\n            \"     (SELECT ms_dtcreation FROM Mob_messagesTexts WHERE Deleted = 0 AND Mob_messagesTexts.ms_messageId = Mob_messages.Id \" +\r\n            \" ORDER BY ms_dtcreation DESC LIMIT 1) as lastDate \" +\r\n            \" from Mob_messages AS Mob_messages  \" +\r\n            \" WHERE Mob_messages.deleted = 0 \" +\r\n            \" AND Mob_messages.dp_id = ?\";\r\n        return this.execSqlCustom(query, [dp_id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_messagesTextsByMessageId(MessageId: string) {\r\n        let query: string = 'SELECT Mob_messagesTexts.id,Mob_messagesTexts.ms_message,Mob_messagesTexts.ms_sender,' +\r\n            ' Mob_messagesTexts.ms_dtcreation, Mob_messagesTexts.ms_messageId, Mob_messagesTextsRead.Id as Mob_messagesTextsReadId ' +\r\n            ' FROM Mob_messagesTexts ' +\r\n            ' LEFT JOIN Mob_messagesTextsRead ON Mob_messagesTexts.Id = Mob_messagesTextsRead.ms_messageTextId ' +\r\n            ' WHERE Mob_messagesTexts.deleted = 0 AND Mob_messagesTexts.ms_messageId =? ' +\r\n            ' ORDER BY Mob_messagesTexts.ms_dtcreation ASC';\r\n\r\n        //, Mob_messagesTextsRead.Id as Mob_messagesTextsReadId\r\n        //LEFT JOIN Mob_messagesTextsRead ON Mob_messagesTexts.Id = Mob_messagesTextsRead.ms_messageTextId\r\n        //Mob_messagesTextsRead.Id as Mob_messagesTextsReadId\r\n        //\r\n        return this.execSqlCustom(query, [MessageId]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_messagesTextsByMessageIdAndDatetime(MessageId: string, ms_dtcreation: Date) {\r\n        let query: string = 'SELECT Mob_messagesTexts.id,Mob_messagesTexts.ms_message,Mob_messagesTexts.ms_sender,' +\r\n            ' Mob_messagesTexts.ms_dtcreation, Mob_messagesTexts.ms_messageId, Mob_messagesTextsRead.Id as Mob_messagesTextsReadId ' +\r\n            ' FROM Mob_messagesTexts LEFT JOIN Mob_messagesTextsRead ON Mob_messagesTexts.Id = Mob_messagesTextsRead.ms_messageTextId' +\r\n            ' WHERE Mob_messagesTexts.deleted = 0 AND Mob_messagesTexts.ms_messageId =? AND Mob_messagesTexts.ms_dtcreation > ? ' +\r\n            ' ORDER BY Mob_messagesTexts.ms_dtcreation ASC';\r\n\r\n        //\r\n        //LEFT JOIN Mob_messagesTextsRead ON Mob_messagesTexts.Id = Mob_messagesTextsRead.ms_messageTextId\r\n        //Mob_messagesTextsRead.Id as Mob_messagesTextsReadId\r\n        //\r\n        return this.execSqlCustom(query, [MessageId, ms_dtcreation]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_dispatchersById(Id: string) {\r\n        let query: string = 'SELECT * FROM mob_dispatchers WHERE deleted=0 AND Id=?';\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_trips() {\r\n        let query: string = \"SELECT * FROM Mob_trip WHERE deleted=0 ORDER BY rowid DESC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getCurrentActivityDetails() {\r\n        //let query: string = \"Select \" +\r\n        //    \"     Mob_Trip.Id AS t_tripId, Mob_Trip.t_company, Mob_Trip.t_year, Mob_Trip.t_branch, Mob_Trip.t_number, Mob_Trip.t_dispatcher, Mob_Trip.t_userID, Mob_Trip.t_plateTruck,\" +\r\n        //    \"     Mob_Trip.t_plateTrailer, Mob_Trip.t_aggregationGroup, Mob_Trip.t_bookingNr, Mob_Trip.t_dtFirstLoading, Mob_Trip.t_dtLastUnloading,\" +\r\n        //    \"     Mob_tripTimeLine.Id AS Id,Mob_tripTimeLine.tl_sequence, Mob_tripTimeLine.tl_dtTimeEstimate, Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_activityId, Mob_tripTimeLine.tl_orderId,\" +\r\n        //    \"     Mob_tripTimeLine.tl_orderStop, Mob_tripTimeLine.tl_longitude, Mob_tripTimeLine.tl_latitude, Mob_tripTimeLine.tl_placeDescription, Mob_tripTimeLine.tl_placeAddress,\" +\r\n        //    \"     Mob_tripTimeLine.tl_placeZip, Mob_tripTimeLine.tl_placeCity, Mob_tripTimeLine.tl_placeNation, Mob_tripTimeLine.tl_notes, Mob_tripTimeLine.tl_dtInsert, Mob_tripTimeLine.tl_externalKey,\" +\r\n        //    \"     Mob_activity.Id AS activityId, Mob_activity.a_description, Mob_activity.a_activityGroup, Mob_activity.a_nextActivity, Mob_activity.a_nextActivityDeltaSeconds, Mob_activity.a_permitsManualDate,\" +\r\n        //    \"     Mob_activity.a_icon, Mob_activity.a_isFoto, Mob_activity.a_documentTypeId,\" +\r\n        //    \"     '' AS t_FirstLoadingPlace, '' AS t_LastUnLoadingPlace,Mob_dispatchers.dp_phone \" +\r\n        //    \" from Mob_Trip \" +\r\n        //    \" INNER JOIN Mob_tripTimeLine ON Mob_tripTimeLine.tl_tripId = Mob_Trip.Id\" +\r\n        //    \" INNER JOIN Mob_activity ON Mob_tripTimeLine.tl_activityId = Mob_activity.Id\" +\r\n        //    \" LEFT JOIN Mob_dispatchers ON Mob_dispatchers.Id = Mob_Trip.t_dispatcher\"\r\n        //    \" Where  Mob_Trip.deleted = 0\" +\r\n        //    //\" AND Mob_tripTimeLine.tl_sequence = 0\" +\r\n        //    \" AND Mob_tripTimeLine.tl_dtInsert IS NULL \" +\r\n        //    \" ORDER BY Mob_tripTimeLine.tl_sequence ASC LIMIT 1\";\r\n\r\n        let query: string = \"SELECT Mob_Trip.Id AS t_tripId, Mob_Trip.t_company, Mob_Trip.t_year, Mob_Trip.t_branch, Mob_Trip.t_number, Mob_Trip.t_dispatcher, Mob_Trip.t_userID, Mob_Trip.t_plateTruck,\" +\r\n            \"     Mob_Trip.t_plateTrailer, Mob_Trip.t_aggregationGroup, Mob_Trip.t_bookingNr, Mob_Trip.t_dtFirstLoading, Mob_Trip.t_dtLastUnloading,\" +\r\n            \"     Mob_tripTimeLine.Id AS Id,Mob_tripTimeLine.tl_sequence, Mob_tripTimeLine.tl_dtTimeEstimate, Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_activityId, Mob_tripTimeLine.tl_orderId,\" +\r\n            \"     Mob_tripTimeLine.tl_orderStop, Mob_tripTimeLine.tl_longitude, Mob_tripTimeLine.tl_latitude, Mob_tripTimeLine.tl_placeDescription, Mob_tripTimeLine.tl_placeAddress,\" +\r\n            \"     Mob_tripTimeLine.tl_placeZip, Mob_tripTimeLine.tl_placeCity, Mob_tripTimeLine.tl_placeNation, Mob_tripTimeLine.tl_notes, Mob_tripTimeLine.tl_dtInsert, Mob_tripTimeLine.tl_externalKey,\" +\r\n            \"     Mob_activity.Id AS activityId, Mob_activity.a_description, Mob_activity.a_activityGroup, Mob_activity.a_nextActivity, Mob_activity.a_nextActivityDeltaSeconds, Mob_activity.a_permitsManualDate,\" +\r\n            \"     Mob_activity.a_icon, Mob_activity.a_isFoto, Mob_activity.a_documentTypeId,\" +\r\n            \"     Mob_Trip.t_FirstLoadingPlace,Mob_Trip.t_LastUnLoadingPlace, \" +\r\n            \"  (Select dp_phone FROM Mob_dispatchers WHERE Id = Mob_Trip.t_dispatcher LIMIT 1) AS dp_phone \" +\r\n            \" FROM Mob_trip INNER JOIN Mob_tripTimeLine ON Mob_tripTimeLine.tl_tripId = Mob_trip.Id \" +\r\n            \" INNER JOIN Mob_activity ON Mob_activity.Id = Mob_tripTimeLine.tl_activityId \" +\r\n            \" WHERE Mob_Trip.deleted = 0 AND Mob_tripTimeLine.tl_dtInsert IS NULL \" +\r\n            \" ORDER BY Mob_tripTimeLine.tl_sequence ASC LIMIT 1\"\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data[0] || null;\r\n        });\r\n    }\r\n\r\n    getActiveActivities() {\r\n        let query: string = \" Select Id,t_company,t_year,t_branch,t_number,t_dispatcher,t_userID,t_plateTruck,t_plateTrailer,t_aggregationGroup,  \" +\r\n            \" t_bookingNr, t_dtFirstLoading, t_dtLastUnloading, t_mapImage, t_FirstLoadingPlace, t_LastUnLoadingPlace, \" +\r\n            \"     (CASE WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime IS NULL) > 0 THEN 'OPEN' WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime IS NULL) = 0 THEN 'OK' ELSE '' END) AS DocStatus, \" +\r\n            \"         Case when (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0 then 'OPEN' \" +\r\n            \" \t     When((Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NOT NULL) > 0  AND  (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0) Then 'ACTIVE' \" +\r\n            \" \t     WHEN(Select count(Id) from mob_tripDocuments Where td_tripId = Mob_Trip.Id AND td_required = 1 and td_datetime IS NULL) > 0 THEN 'ACTIVE'  \" +\r\n            \" END AS ActivityStatus  \" +\r\n            \" from Mob_Trip Where  deleted= 0 \" +\r\n            \" AND \" +\r\n            \"     ( \" +\r\n            \"     (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0 \" +\r\n            \" OR \" +\r\n            \"     ((Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NOT NULL) > 0  AND (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0)  \" +\r\n            \" OR \" +\r\n            \"     (Select count(Id) from mob_tripDocuments Where td_tripId = Mob_Trip.Id AND td_required = 1 and td_datetime IS NULL) > 0 \" +\r\n            \"            ) \" +\r\n            \" ORDER  BY  t_dtFirstLoading DESC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data || null;\r\n        });\r\n    }\r\n\r\n    getCompletedActivities() {\r\n        let query: string = \"Select Id,t_company,t_year,t_branch,t_number,t_dispatcher,t_userID,t_plateTruck,t_plateTrailer,t_aggregationGroup, \" +\r\n            \" t_bookingNr, t_dtFirstLoading, t_dtLastUnloading, t_mapImage, \" +\r\n            \"     (CASE WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime IS NULL) > 0 THEN 'OPEN'  \" +\r\n            \" WHEN(Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime IS NULL) = 0 THEN 'OK'  \" +\r\n            \" ELSE '' END) AS DocStatus, \" +\r\n            \"     'COMPLETED' AS ActivityStatus  \" +\r\n            \" from Mob_Trip Where  deleted= 0 \" +\r\n            \" AND \" +\r\n            \"     ((Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) <= 0) \" +\r\n            \" AND \" +\r\n            \"     ((Select count(Id) from mob_tripDocuments Where td_tripId = Mob_Trip.Id AND td_required = 1 and td_datetime IS NULL) <= 0) \" +\r\n            \" ORDER  BY  t_dtFirstLoading DESC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getActivitiesList() {\r\n        let query: string = \"Select Id,t_company,t_year,t_branch,t_number,t_dispatcher,t_userID,t_plateTruck,t_plateTrailer,t_aggregationGroup,t_bookingNr,t_dtFirstLoading,t_dtLastUnloading,t_mapImage,(CASE WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime = NULL) > 0 THEN 'OPEN' WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime = NULL) = 0 THEN 'OK' ELSE '' END) AS DocStatus,\" +\r\n            \" 'Active' AS [Status] from Mob_Trip Where  deleted= 0 AND ((Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective = NULL) > 0\" +\r\n            \" OR ((Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective <>  NULL) > 0\" +\r\n            \" AND (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective = NULL) > 0 ))\" +\r\n            \" UNION ALL\" +\r\n            \" Select Id, t_company, t_year, t_branch, t_number, t_dispatcher, t_userID, t_plateTruck, t_plateTrailer, t_aggregationGroup, t_bookingNr, t_dtFirstLoading, t_dtLastUnloading, t_mapImage, (CASE WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime = NULL) > 0 THEN 'OPEN' WHEN (Select count(Id) from mob_tripDocuments Where td_required = 1 and td_datetime = NULL) = 0 THEN 'OK' ELSE '' END) AS DocStatus,\" +\r\n            \" 'Completed' AS [Status] from Mob_Trip Where  deleted= 0 AND (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective = NULL) = 0\" +\r\n            \" ORDER  BY  t_dtFirstLoading DESC\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getMob_tripById(Id: string) {\r\n        let query: string = \"Select *, \" +\r\n            \"    (Select dp_phone FROM Mob_dispatchers WHERE Id = Mob_Trip.t_dispatcher LIMIT 1) AS dp_phone, \" +\r\n            \"    Case \" +\r\n            \"    When \" +\r\n            \"        ((Select Count(Id) from Mob_tripTimeLine Where Mob_tripTimeLine.deleted = 0 AND tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0 \" +\r\n            \"    OR \" +\r\n            \"        ((Select Count(Id) from Mob_tripTimeLine Where Mob_tripTimeLine.deleted = 0 AND tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_sequence = 0 AND Mob_tripTimeLine.tl_dtTimeEffective IS NOT NULL) > 0  AND  (Select Count(Id) from Mob_tripTimeLine Where tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) > 0) \" +\r\n            \"    OR \" +\r\n            \"        (Select count(Id) from mob_tripDocuments Where mob_tripDocuments.deleted = 0 AND td_tripId = Mob_Trip.Id AND td_required = 1 and td_datetime IS NULL) > 0  \" +\r\n            \"    ) THEN 'ACTIVE' \" +\r\n            \"    WHEN \" +\r\n            \"        ((Select Count(Id) from Mob_tripTimeLine Where Mob_tripTimeLine.deleted = 0 AND tl_tripId = Mob_Trip.Id AND Mob_tripTimeLine.tl_dtTimeEffective IS NULL) <= 0) \" +\r\n            \"    AND \" +\r\n            \"        ((Select count(Id) from mob_tripDocuments Where mob_tripDocuments.deleted = 0 AND td_tripId = Mob_Trip.Id AND td_required = 1 and td_datetime IS NULL) <= 0) \" +\r\n            \"    THEN 'COMPLETED' \" +\r\n            \"    ELSE '' \" +\r\n            \"    END AS activityStatus   \" +\r\n            \"    from Mob_Trip \" +\r\n            \"    Where Mob_Trip.deleted = 0 \" +\r\n            \"    AND Mob_trip.Id = ? \" +\r\n            \"   ORDER  BY Mob_Trip.t_dtFirstLoading DESC\";\r\n\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getTripTimeLineByTripId(Id: string) {\r\n        let loadId = \"Start Loading\";\r\n        let unloadId = \"Start unloading\";\r\n\r\n        let query: string = \"SELECT Mob_trip.Id, Mob_tripTimeLine.tl_dtTimeEstimate, Mob_tripTimeLine.tl_placeDescription,\" +\r\n            \" Mob_tripTimeLine.tl_placeAddress, Mob_tripTimeLine.tl_placeZip, \" +\r\n            \" Mob_tripTimeLine.tl_placeCity,Mob_tripTimeLine.tl_placeNation,Mob_tripTimeLine.tl_notes \" +\r\n            \" FROM Mob_trip \" +\r\n            \" INNER JOIN Mob_tripTimeLine ON Mob_tripTimeLine.tl_tripId = Mob_trip.Id\" +\r\n            \" INNER JOIN Mob_Activity ON Mob_Activity.Id = Mob_tripTimeLine.tl_activityId\" +\r\n            \" WHERE Mob_trip.Id = ? AND Mob_Activity.a_description IN ('\" + loadId + \"','\" + unloadId + \"')\" +\r\n            \" ORDER BY tl_sequence\";\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getTripGoodsDescriptionByTripId(Id: string) {\r\n        let query: string = 'SELECT Mob_trip.Id,Mob_tripGoods.tg_description,Mob_tripGoods.tg_quantity,Mob_tripGoods.tg_uom,Mob_tripGoods.tg_width,Mob_tripGoods.tg_height,' +\r\n            ' Mob_tripGoods.tg_length FROM Mob_tripGoods INNER JOIN Mob_trip ON Mob_trip.Id = Mob_tripGoods.tg_TripId WHERE Mob_trip.Id =?';\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getTripEventTimeLineByTripId(Id: string) {\r\n        let query: string = 'SELECT Mob_trip.id,Mob_tripTimeLine.tl_activityId,Mob_tripTimeLine.tl_dtTimeEstimate FROM Mob_tripTimeLine' +\r\n            ' INNER JOIN Mob_trip ON Mob_trip.Id = Mob_tripTimeLine.tl_tripId WHERE Mob_trip.Id =?';\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getTripEventTimeLineByTripIdNew(tripId: string) {\r\n\r\n        let query: string = \"SELECT  * FROM  (\" +\r\n            \" SELECT Mob_trip.Id AS t_tripId,Mob_tripTimeLine.Id, Mob_tripTimeLine.tl_dtTimeEstimate, Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_placeDescription,\" +\r\n            \" Mob_tripTimeLine.tl_placeAddress, Mob_tripTimeLine.tl_placeZip,\" +\r\n            \" Mob_tripTimeLine.tl_placeCity, Mob_tripTimeLine.tl_placeNation, Mob_tripTimeLine.tl_notes,\" +\r\n            \" Mob_activity.a_icon, Mob_activity.a_description,\" +\r\n            \" Mob_tripTimeLine.tl_dtInsert, Mob_tripTimeLine.tl_sequence,\" +\r\n            \" ifnull(Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_dtTimeEstimate) as eventDatetime,\" +\r\n            \" Mob_activity.Id AS activityId, Mob_activity.a_isFoto, Mob_activity.a_permitsManualDate, Mob_activity.a_documentTypeId \" +\r\n            \" FROM Mob_trip INNER JOIN Mob_tripTimeLine ON Mob_tripTimeLine.tl_tripId = Mob_trip.Id\" +\r\n            \" INNER JOIN Mob_activity ON Mob_activity.Id = Mob_tripTimeLine.tl_activityId\" +\r\n            \" WHERE Mob_tripTimeLine.tl_dtInsert IS NOT NULL AND Mob_trip.Id = ? ORDER BY Mob_tripTimeLine.tl_sequence ASC \" +\r\n            \" ) \" +\r\n            \" UNION ALL \" +\r\n            \" SELECT * FROM (\" +\r\n            \" SELECT Mob_trip.Id AS t_tripId,Mob_tripTimeLine.Id, Mob_tripTimeLine.tl_dtTimeEstimate, Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_placeDescription,\" +\r\n            \" Mob_tripTimeLine.tl_placeAddress, Mob_tripTimeLine.tl_placeZip,\" +\r\n            \" Mob_tripTimeLine.tl_placeCity, Mob_tripTimeLine.tl_placeNation, Mob_tripTimeLine.tl_notes,\" +\r\n            \" Mob_activity.a_icon, Mob_activity.a_description,\" +\r\n            \" Mob_tripTimeLine.tl_dtInsert, Mob_tripTimeLine.tl_sequence,\" +\r\n            \" ifnull(Mob_tripTimeLine.tl_dtTimeEffective, Mob_tripTimeLine.tl_dtTimeEstimate) as eventDatetime, \" +\r\n            \" Mob_activity.Id AS activityId, Mob_activity.a_isFoto, Mob_activity.a_permitsManualDate, Mob_activity.a_documentTypeId \" +\r\n            \" FROM Mob_trip INNER JOIN Mob_tripTimeLine ON Mob_tripTimeLine.tl_tripId = Mob_trip.Id\" +\r\n            \" INNER JOIN Mob_activity ON Mob_activity.Id = Mob_tripTimeLine.tl_activityId\" +\r\n            \" WHERE Mob_tripTimeLine.tl_dtInsert IS NULL AND Mob_trip.Id = ? ORDER BY Mob_tripTimeLine.tl_sequence ASC LIMIT 1\" +\r\n            \" ) \";\r\n        return this.execSqlCustom(query, [tripId, tripId]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getTripRequestedDocumentByTripId(Id: string) {\r\n        let query: string = \"SELECT Mob_trip.Id AS tripId,Mob_tripDocuments.Id AS tripDocumentsId,Mob_tripDocuments.td_docType, Mob_tripDocuments.td_datetime,\" +\r\n            \" Mob_tripDocuments.td_required, Mob_documentTypes.d_description, Mob_documentTypes.d_barcodeRequired\" +\r\n            \" FROM Mob_tripDocuments  \" +\r\n            \" INNER JOIN Mob_trip ON Mob_trip.Id = Mob_tripDocuments.td_tripId\" +\r\n            \" INNER JOIN Mob_documentTypes ON Mob_documentTypes.Id = Mob_tripDocuments.td_docType\" +\r\n            \" WHERE Mob_trip.Id =? \";\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getDocumentTypesByGroup(group: string) {\r\n        let query: string = \" Select id,d_description,d_group,d_barcodeRequired from Mob_documentTypes\" +\r\n            \" Where mob_documentTypes.deleted = 0 and (d_group=? OR 'ALL'=?)\";\r\n        return this.execSqlCustom(query, [group, group]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getDocumentTypesByTripId(tripId: string, documentTypeId: string) {\r\n        let query: string = \" Select Mob_tripDocuments.Id AS tripDocumentId,Mob_documentTypes.Id, Mob_documentTypes.d_description, Mob_documentTypes.d_group, Mob_documentTypes.d_barcodeRequired\" +\r\n            \" from Mob_tripDocuments INNER JOIN Mob_documentTypes ON Mob_tripDocuments.td_docType = Mob_documentTypes.Id\" +\r\n            \" Where Mob_tripDocuments.deleted = 0 AND Mob_documentTypes.deleted = 0\" +\r\n            \" AND Mob_tripDocuments.td_tripId =? AND  Mob_documentTypes.Id =? LIMIT 1\";\r\n        return this.execSqlCustom(query, [tripId, documentTypeId]).then((data) => {\r\n            return data[0] || null;\r\n        });\r\n    }\r\n\r\n    getDocumentTypesByTripIdAndDocumentTypeId(tripId: string, documentTypeId: string) {\r\n        let query: string = \"Select Mob_tripDocuments.Id AS tripDocumentId,Mob_documentTypes.Id AS documentTypeId, Mob_documentTypes.d_description, Mob_documentTypes.d_group, Mob_documentTypes.d_barcodeRequired from Mob_documentTypes \" +\r\n            \" LEFT JOIN Mob_tripDocuments ON Mob_documentTypes.Id = Mob_tripDocuments.td_docType \" +\r\n            \" AND Mob_tripDocuments.td_tripId = ? AND Mob_tripDocuments.Deleted = 0 \" +\r\n            \" WHERE Mob_documentTypes.Id = ? AND Mob_documentTypes.Deleted = 0 LIMIT 1\";\r\n        return this.execSqlCustom(query, [tripId, documentTypeId]).then((data) => {\r\n            return data[0] || null;\r\n        });\r\n    }\r\n\r\n    getTripTimeRecordForNewEvent(tripId: string) {\r\n        let query: string = \"Select Maintt.tl_tripId, Maintt.tl_sequence,Maintt.tl_dtTimeEstimate,Maintt.tl_dtTimeEffective,Maintt.tl_activityId, \" +\r\n            \" Maintt.tl_orderId, Maintt.tl_orderStop, Maintt.tl_longitude, Maintt.tl_latitude, Maintt.tl_placeDescription, Maintt.tl_placeAddress, Maintt.tl_placeZip,\" +\r\n            \"     tl_placeCity, tl_placeNation, tl_notes, tl_dtInsert, tl_externalKey,\" +\r\n            \"     Act.a_description, Act.a_activityGroup, Act.a_nextActivity, Act.a_nextActivityDeltaSeconds, Act.a_permitsManualDate,\" +\r\n            \"     Act.a_isFoto, Act.a_documentTypeId,\" +\r\n            \"     (Maintt.tl_sequence) AS  maxtl_sequence\" +\r\n            \" from Mob_tripTimeLine AS Maintt \" +\r\n            \" INNER JOIN Mob_Activity AS Act ON  Maintt.tl_activityId = Act.Id\" +\r\n            \" Where Maintt.deleted = 0\" +\r\n            \" AND Maintt.tl_tripId =? \" +\r\n            \" AND Maintt.tl_dtInsert IS NOT NULL \" +\r\n            \" Order BY Maintt.tl_sequence DESC LIMIT 1\";\r\n        return this.execSqlCustom(query, [tripId]).then((data) => {\r\n            return data[0] || null;\r\n        });\r\n    }\r\n\r\n    getMob_activityById(Id: string) {\r\n        let query: string = \"SELECT id,a_description,a_activityGroup,a_nextActivity,a_nextActivityDeltaSeconds,a_permitsManualDate,a_isFoto,a_documentTypeId \" +\r\n            \" FROM Mob_activity WHERE deleted= 0 AND Id=? LIMIT 1\";\r\n        return this.execSqlCustom(query, [Id]).then((data) => {\r\n            return data[0] || null;\r\n        });\r\n    }\r\n\r\n    getMobActivityByActivityGroup(a_activityGroup: string) {\r\n        let query: string = \"SELECT id, a_description,a_activityGroup,a_nextActivity,a_nextActivityDeltaSeconds,a_permitsManualDate,a_icon,\" +\r\n            \" a_isFoto,a_documentTypeId FROM Mob_activity WHERE deleted=0 AND a_activityGroup=?\";\r\n        return this.execSqlCustom(query, [a_activityGroup]).then((data) => {\r\n            return data;\r\n        });\r\n    }\r\n\r\n    getUser() {\r\n\r\n        let query: string = \"SELECT * FROM Mob_user WHERE deleted=0 AND id=?  LIMIT 1\";\r\n        return this.storage.get('user').then((userdetail) => {\r\n            let user = JSON.parse(userdetail);\r\n\r\n            let userId = user != null ? user.id : '';\r\n            return this.execSqlCustom(query, [userId]).then((data) => {\r\n                if (data != null) {\r\n                    return data[0];\r\n                } else {\r\n                    return { id: null, u_language: \"en\" };\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    getUserFromLocalStorage() {\r\n        //// get from local storage for get or set user data.\r\n        return this.storage.ready().then(() => {\n            return this.storage.get('user').then((userdetail) => {\r\n                return JSON.parse(userdetail);\r\n            });\r\n        });\r\n    }\r\n\r\n    clearUserData() {\n        return this.storage.clear();\r\n    }\r\n\r\n    setUserInLocalStorage(user) {\r\n        //// get from local storage for get or set user data.\r\n        return this.storage.ready().then(() => {\n            return this.storage.set('user', JSON.stringify(user));\r\n        });\r\n    }\r\n\r\n    getMob_tripTimeLineTest() {\r\n\r\n        let query: string = \"SELECT * FROM Mob_tripTimeLine\";\r\n        return this.execSqlCustom(query, []).then((data) => {\r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    private execSqlCustom = (sqlToExecute: string, bracketValues: Array<any>): Promise<any> => {\r\n        return this.sqlite.create({\r\n            name: this.sDBName,\r\n            location: 'default'\r\n        }).then(\r\n            (db: SQLiteObject) => {\r\n\r\n                return db.executeSql(sqlToExecute, bracketValues)\r\n                    .then((res: any) => {\r\n                        let data = [];\r\n                        for (var i = 0; i < res.rows.length; i++) {\r\n                            data.push(res.rows.item(i))\r\n                        }\r\n                        return data;\r\n                    }\r\n                    ).catch(e => console.log(e));\r\n            }).catch(e => console.log(e));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-service/data-service.ts","import { Injectable } from '@angular/core';\nimport { Camera } from '@ionic-native/camera';\n\n@Injectable()\nexport class CameraProvider {\n\n    constructor(private camera: Camera) {\n    }\n\n    getPictureFromCamera() {\n        return this.getImage(this.camera.PictureSourceType.CAMERA, false);\n    }\n\n    getPictureFromPhotoLibrary() {\n        return this.getImage(this.camera.PictureSourceType.PHOTOLIBRARY);\n    }\n\n    // This method takes optional parameters to make it more customizable\n    getImage(pictureSourceType, crop = false, quality = 50, allowEdit = false, saveToAlbum = true) {\n        //const options = {\n        //    quality,\n        //    allowEdit,\n        //    destinationType: this.camera.DestinationType.DATA_URL,\n        //    sourceType: pictureSourceType,\n        //    encodingType: this.camera.EncodingType.JPEG,\n        //    saveToPhotoAlbum: saveToAlbum\n        //};\n\n        const options = {\n            quality,        \n            destinationType: this.camera.DestinationType.DATA_URL,\n            sourceType: pictureSourceType,\n            encodingType: this.camera.EncodingType.JPEG         \n        };\n\n        // If set to crop, restricts the image to a square of 600 by 600\n        if (crop) {\n            options['targetWidth'] = 600;\n            options['targetHeight'] = 600;\n        }\n\n        return this.camera.getPicture(options).then(imageData => {\n            //const base64Image = 'data:image/png;base64,' + imageData;\n            //return base64Image;\n            \n            return imageData;\n        }, error => {\n            console.log('CAMERA ERROR -> ' + JSON.stringify(error));\n            alert('CAMERA ERROR -> ' + JSON.stringify(error));\n\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/util/camera.provider.ts"],"sourceRoot":""}