{"version":3,"sources":["../../src/pages/document-scan/document-scan.module.ts","../../src/pages/document-scan/document-scan.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n \n\nimport { DocumentScanPage } from './document-scan';\n\n@NgModule({\n  declarations: [\n      DocumentScanPage,\n  ],\n  imports: [\n      IonicPageModule.forChild(DocumentScanPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n      DocumentScanPage\n  ]\n})\nexport class DocumentScanPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/document-scan/document-scan.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ActionSheetController,\n    LoadingController, AlertController, NavParams, ViewController }\nfrom 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PhotoScanService } from '../../providers/photo-scan/photo-scan';\nimport { Sync } from '../../providers/sync/sync';\nimport { DataService } from '../../providers/data-service/data-service';\n\n@IonicPage()\n@Component({\n    selector: 'page-document-scan',\n    templateUrl: 'document-scan.html'\n})\nexport class DocumentScanPage {\n    isReadyToSave: boolean;\n    placeholder = 'assets/img/open-camera.png';\r\n    chosenPicture: any;\r\n    uplodimage: string = \"\";\r\n    barcodeData = {\r\n        \"text\": \"\"\r\n    };\r\n\r\n    tripData = {\r\n        \"t_tripId\": \"\",\r\n        \"td_docType\": \"\",\r\n        \"td_TripDocumentsId\": \"\",\r\n        \"d_barcodeRequired\": true,\r\n        \"d_description\": \"\"\r\n    }\r\n\r\n    tranlageMessage: any = [];\r\n\r\n    constructor(\r\n        public navCtrl: NavController,\r\n        public actionsheetCtrl: ActionSheetController,\r\n        public translate: TranslateService,\r\n        public viewCtrl: ViewController,\r\n        public loadingCtrl: LoadingController,\r\n        public alertCtrl: AlertController,\r\n        public photoScan: PhotoScanService,\r\n        public navParams: NavParams,\r\n        public sync: Sync,\r\n        public dataService: DataService\r\n    ) {\r\n        this.uplodimage = \"assets/img/open-camera.png\";\r\n\r\n        this.tripData.t_tripId = this.navParams.get('t_tripId');\r\n        this.tripData.td_docType = this.navParams.get('td_docType');\r\n\r\n        this.dataService.getDocumentTypesByTripIdAndDocumentTypeId(this.tripData.t_tripId, this.tripData.td_docType)\r\n            .then((data) => {\r\n\r\n                this.tripData.td_TripDocumentsId = data.tripDocumentId;\r\n                this.tripData.d_barcodeRequired = data.d_barcodeRequired;\r\n                this.tripData.d_description = data.d_description;\r\n            });\r\n\r\n        this.translate.get([\n            \"SAVING_LABEL\",\r\n            \"DOCUMENT_SCAN_BARCODE_SCANNED_MESSAGE\",\r\n            \"DOCUMENT_SCAN_BARCODE_SCANNED_TITLE\",\r\n            \"DOCUMENT_SCAN_BARCODE_SCANNED_OK\",\r\n        ]).subscribe(\n            (values) => {\r\n                this.tranlageMessage['SAVING_LABEL'] = values.SAVING_LABEL;\r\n                this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_MESSAGE'] = values.DOCUMENT_SCAN_BARCODE_SCANNED_MESSAGE;\r\n                this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_TITLE'] = values.DOCUMENT_SCAN_BARCODE_SCANNED_TITLE;\r\n                this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_OK'] = values.DOCUMENT_SCAN_BARCODE_SCANNED_OK;\r\n            });\r\n    }\n\n    scanBarcode() {\r\n\r\n        this.photoScan.scanBarcode().then((barcodeDetail) => {\r\n            this.barcodeData = barcodeDetail;\r\n            console.log(JSON.stringify(barcodeDetail));\r\n\r\n            if (this.barcodeData.text != \"\") {\r\n                const alertMsg = this.alertCtrl.create({\n                    title: this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_TITLE'],\n                    subTitle: this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_MESSAGE'],\n                    buttons: [\r\n                        {\r\n                            text: this.tranlageMessage['DOCUMENT_SCAN_BARCODE_SCANNED_OK'],\r\n                            handler: () => {\r\n                                console.log('OK clicked');\r\n\r\n                                this.photoScan.takePicture().then((picture) => {\r\n\r\n                                    if (picture) {\r\n                                        this.chosenPicture = 'data:image/jpeg;base64,' + picture;\r\n                                        this.uplodimage = this.chosenPicture;\r\n                                        this.isReadyToSave = true;\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    ]\n\n                });\n                alertMsg.present();\r\n            }           \r\n        });\r\n\r\n    }\n\n    savePicture() {\n         \n        let loader = this.loadingCtrl.create({\r\n            content: this.tranlageMessage['SAVING_LABEL'],\r\n        });\n        loader.present();\n\n        if (this.tripData.td_TripDocumentsId) {\n            // Document is alredy available. Just need to update..\n            let mob_tripDocumentUpdate = {\r\n                'id': this.tripData.td_TripDocumentsId,\r\n                'td_datetime': new Date(),\r\n                'tl_barcode': this.barcodeData.text,\r\n                'td_nomeFile': this.createFileName(),\r\n                'UpdatedAt': new Date()\r\n            };\r\n            this.sync.updateTableRow('Mob_tripDocuments', mob_tripDocumentUpdate)\r\n                .then((mob_tripDocument) => {\r\n                                        \r\n                    let mob_tripDocumentsImage = {\r\n                        'td_TripDocumentsId': this.tripData.td_TripDocumentsId,\r\n                        'td_document': this.chosenPicture,\r\n                    };\r\n                    this.sync.insertTableRow('mob_tripDocumentsImages', mob_tripDocumentsImage)\r\n                        .then((tripDocumentsImage) => {                            \r\n                            loader.dismiss();\r\n                            this.viewCtrl.dismiss();\r\n                        });\r\n                });\n\n        }\n        else {\n            // Document is not available. Need to Insert into Mob_tripDocuments table..\n            let mob_tripDocument = {\n                'td_tripId': this.tripData.t_tripId,\n                'td_docType': this.tripData.td_docType,\n                'td_datetime': new Date(),\n                'td_required': false,\n                'tl_orderCompany': \"\",\n                //'tl_orderYear': this.chosenPicture,\n                'tl_orderBranch': \"\",\n                'tl_orderNumber': 0,\n                //'tl_orderStop': this.chosenPicture,\n                'tl_barcode': this.barcodeData.text,\n                //'td_externalKey': \"\",\n                'td_nomeFile': this.createFileName(),\n                'Deleted': false\n            };\n\n            this.sync.insertTableRow('Mob_tripDocuments', mob_tripDocument)\r\n                .then((tripDocument) => {\r\n                    \r\n                    let mob_tripDocumentsImage = {\r\n                        'td_TripDocumentsId': tripDocument.Id,\r\n                        'td_document': this.chosenPicture,\r\n                    };\r\n                    this.sync.insertTableRow('mob_tripDocumentsImages', mob_tripDocumentsImage)\r\n                        .then((tripDocumentsImage) => {                    \r\n                            loader.dismiss();\r\n                            this.viewCtrl.dismiss();\r\n                        });\r\n                });\n        }\n    }\n\n    cancel() {\n        this.viewCtrl.dismiss();\n    }\n    // Create a new name for the image \n    private createFileName() {\n        var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpeg\";\r\n        return newFileName;\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/document-scan/document-scan.ts"],"sourceRoot":""}