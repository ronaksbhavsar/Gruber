{"version":3,"sources":["../../src/pages/confirm-activity/confirm-activity.module.ts","../../src/pages/confirm-activity/confirm-activity.ts"],"names":[],"mappings":"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","file":"10.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { ConfirmActivityPage } from './confirm-activity';\n\n@NgModule({\n  declarations: [\n      ConfirmActivityPage,\n  ],\n  imports: [\n      IonicPageModule.forChild(ConfirmActivityPage),\n    TranslateModule.forChild()\n  ],\n  exports: \n  [\n  ]\n})\nexport class ConfirmActivityPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirm-activity/confirm-activity.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ViewController, NavParams, ModalController, AlertController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Sync } from '../../providers/sync/sync';\r\nimport { DataService } from '../../providers/data-service/data-service';\nimport { LocationTracker } from '../../providers/location-tracker/location-tracker';\n\n@IonicPage()\n@Component({\n    selector: 'page-confirm-activity',\n    templateUrl: 'confirm-activity.html'\n})\nexport class ConfirmActivityPage {\n    tripData: any;\n    tlDateTime: string;\n    pageName: string;\n    tripId: string;\n    activityId: string;\n    nextActivityId: string;\n    eventTripTimeLineData: any = {};\n\n    //tlTime: string;\n    isDisabled: boolean = false;\n    constructor(\n        public navCtrl: NavController,\n        private viewCtrl: ViewController,\n        public modalCtrl: ModalController,\n        public alertCtrl: AlertController,\n        private navParams: NavParams,\n        public translate: TranslateService,\n        public sync: Sync,\r\n        public dataService: DataService,\n        public locationTracker: LocationTracker\n    ) {\n\n        this.pageName = this.navParams.get('pageName');\n\n        this.tripDataIsFoto(this.pageName);\n    }\n\n    tripDataIsFoto(pageName) {\n        if (pageName == 'ConfirmTimeLineActivity') {\n\n            this.tripData = this.navParams.get('data');\n            if (this.tripData.a_permitsManualDate == 0) {\n                this.isDisabled = false;\n                //Bug 94 : Confirm acitivy -> Date and Time\n                //this.tlDateTime = new Date(this.tripData.tl_dtTimeEstimate).toISOString();\r\n            } else {\r\n                this.isDisabled = true;\r\n                //Bug 94 : Confirm acitivy -> Date and Time\r\n                //this.tlDateTime = new Date(this.tripData.tl_dtTimeEstimate).toISOString();\r\n            }\n            this.tlDateTime = new Date().toISOString();\n        }\n        else if (pageName == 'BreakEventActivity') {\n\n            this.tripId = this.navParams.get('tripId');\n            this.activityId = this.navParams.get('tl_activityId');\n\n            if (this.tripId) {\n                this.dataService.getTripTimeRecordForNewEvent(this.tripId).then((timelineRes) => {\r\n                    this.eventTripTimeLineData = timelineRes;\r\n                });\r\n            }\n            this.dataService.getMob_activityById(this.activityId)\r\n                .then((activity) => {\r\n\r\n                    if (activity) {\r\n                        if (activity.hasOwnProperty('a_nextActivity')) {\r\n                            this.nextActivityId = activity.a_nextActivity;\r\n                        }\r\n                        if (activity.a_permitsManualDate == 0) {\n                            this.isDisabled = false;\n                            //Bug 94 : Confirm acitivy -> Date and Time\n                            //this.tlDateTime = new Date(this.eventTripTimeLineData.tl_dtTimeEstimate).toISOString();\r\n                        } else {\r\n                            this.isDisabled = true;\r\n                            //Bug 94 : Confirm acitivy -> Date and Time\r\n                            //this.tlDateTime = new Date(this.eventTripTimeLineData.tl_dtTimeEstimate).toISOString();\r\n                        }\r\n                        this.tlDateTime = new Date().toISOString();\r\n                    }\r\n                });\n        }\n        else {\n\n        }\r\n    }\n\n    confirm(pageName) {\n\n        if (pageName == 'ConfirmTimeLineActivity') {\n\n            if (this.tripData.a_isFoto == 1) {\n\n                let confirmActivityObj = {\r\n                    t_tripId: this.tripData.t_tripId,\r\n                    a_documentTypeId: this.tripData.a_documentTypeId,\r\n                    tl_timelineId: this.tripData.Id,\r\n                    tl_dtTimeEffective: new Date(this.tlDateTime),\r\n                    pageName: 'ConfirmTimeLineActivity'\r\n                };\r\n\r\n                this.modalCtrl.create('PictureUploadPage', confirmActivityObj).present();\n\n                //this.navCtrl.push('PictureUploadPage',\r\n                //    {\r\n                //        't_tripId': this.tripData.t_tripId,\r\n                //        'tl_timelineId': this.tripData.Id,\r\n                //        'tl_dtTimeEffective': new Date(this.tlDateTime),\r\n                //        pageName: 'confirmActivity'\r\n                //    });\r\n\r\n            }\n            else {\n                this.updateMobEventsDateTime().then(() => {\r\n                    this.successMessage();\r\n                });\r\n            }\n        }\n        else if (pageName == 'BreakEventActivity') {\n            this.insertMobTripTimeLine().then(() => {\r\n                this.successMessage();\r\n            });\n        }\n        else {\n\n        }\n\n    }\n\n    close() {\n        this.viewCtrl.dismiss();\n    }\n\n    insertMobTripTimeLine() {\n\n        return this.locationTracker.getCurrentLocation().then((location) => {\r\n\r\n            let currentRecord = {\r\n                'tl_tripId': this.eventTripTimeLineData.tl_tripId,\r\n                'tl_sequence': (this.eventTripTimeLineData.tl_sequence + 1),\r\n                'tl_dtTimeEstimate': new Date(this.eventTripTimeLineData.tl_dtTimeEstimate),\r\n                'tl_dtTimeEffective': new Date(this.tlDateTime),\r\n                'tl_activityId': this.activityId,\r\n                'tl_orderId': this.eventTripTimeLineData.tl_orderId,\r\n                'tl_orderStop': this.eventTripTimeLineData.tl_orderStop,\r\n                'tl_longitude': location.longitude,\r\n                'tl_latitude': location.latitude,\r\n                'tl_placeDescription': this.eventTripTimeLineData.tl_placeDescription,\r\n                'tl_placeAddress': this.eventTripTimeLineData.tl_placeAddress,\r\n                'tl_placeZip': this.eventTripTimeLineData.tl_placeZip,\r\n                'tl_placeCity': this.eventTripTimeLineData.tl_placeCity,\r\n                'tl_placeNation': this.eventTripTimeLineData.tl_placeNation,\r\n                'tl_notes': this.eventTripTimeLineData.tl_notes,\r\n                'tl_dtInsert': new Date(),\r\n                'tl_externalKey': this.eventTripTimeLineData.tl_externalKey\r\n            };\r\n\r\n            let nextActivityRecord = {\r\n                'tl_tripId': this.eventTripTimeLineData.tl_tripId,\r\n                'tl_sequence': (this.eventTripTimeLineData.tl_sequence + 1),\r\n                'tl_dtTimeEstimate': new Date(this.tlDateTime),\r\n                //'tl_dtTimeEffective': this.eventTripTimeLineData.tl_dtTimeEffective,\r\n                'tl_activityId': this.nextActivityId,\r\n                'tl_orderId': this.eventTripTimeLineData.tl_orderId,\r\n                'tl_orderStop': this.eventTripTimeLineData.tl_orderStop,\r\n                'tl_longitude': location.longitude,\r\n                'tl_latitude': location.latitude,\r\n                'tl_placeDescription': this.eventTripTimeLineData.tl_placeDescription,\r\n                'tl_placeAddress': this.eventTripTimeLineData.tl_placeAddress,\r\n                'tl_placeZip': this.eventTripTimeLineData.tl_placeZip,\r\n                'tl_placeCity': this.eventTripTimeLineData.tl_placeCity,\r\n                'tl_placeNation': this.eventTripTimeLineData.tl_placeNation,\r\n                'tl_notes': this.eventTripTimeLineData.tl_notes,\r\n                //'tl_dtInsert': this.eventTripTimeLineData.tl_dtInsert,\r\n                'tl_externalKey': this.eventTripTimeLineData.tl_externalKey\r\n            };\r\n\r\n            if (this.nextActivityId) {\r\n\r\n                return this.sync.insertTableRow('mob_tripTimeLine', currentRecord).then((currentRes) => {\r\n\r\n                    return this.sync.insertTableRow('mob_tripTimeLine', nextActivityRecord).then((nextRes) => {\r\n                        // alert(JSON.stringify(result));\r\n                        return nextRes;\r\n                    })\r\n                    //return result;\r\n                });\r\n            }\r\n            else {\r\n                return this.sync.insertTableRow('mob_tripTimeLine', currentRecord).then((nextRes) => {\r\n                    // alert(JSON.stringify(result));\r\n                    return nextRes;\r\n                })\r\n            }\r\n        });\r\n    }\n\n    updateMobEventsDateTime() {\r\n        let updateRecord = {\r\n            \"id\": this.tripData.Id,\r\n            \"tl_dtTimeEffective\": new Date(this.tlDateTime),\r\n            \"tl_dtInsert\": new Date()\r\n        };\r\n        return this.sync.updateTableRow('mob_tripTimeLine', updateRecord).then((result) => {\r\n            return this.insertMobEventsDateTime().then((inserted) => {\r\n                return inserted;\r\n            });\r\n        });\r\n    }\n\n    insertMobEventsDateTime() {\r\n        return this.locationTracker.getCurrentLocation().then((location) => {\r\n            let u_phone = '';\r\n\r\n            this.dataService.getUser().then((user) => {\r\n                if (user.id != null) {\r\n                    u_phone = user.u_phone;\r\n                }\r\n            });\r\n\r\n            let insertRecord = {\r\n                'e_tripid': this.tripData.t_tripId,\r\n                'e_sequence': this.tripData.tl_sequence,\r\n                'e_activityId': this.tripData.activityId,\r\n                'e_dtFilledTime': new Date(this.tlDateTime),\r\n                'e_dtDeviceTime': new Date(),\r\n                'e_dtGPSTime': location.coordinatesDatetime,\r\n                'e_longitude': location.longitude,\r\n                'e_latitude': location.latitude,\r\n                'e_coordinatesOrigin': location.coordinatesOrigin,\r\n                'e_placeAddress': this.tripData.tl_placeAddress,\r\n                'e_placeZip': this.tripData.tl_placeZip,\r\n                'e_placeCity': this.tripData.tl_placeCity,\r\n                'e_placeNation': this.tripData.tl_placeNation,\r\n                'e_phone': u_phone\r\n            };\r\n\r\n            return this.sync.insertTableRow('mob_events', insertRecord).then((result) => {\r\n                return result;\r\n            });\r\n\r\n        });\r\n\r\n    }\n\n    successMessage() {\n\n        let savedLabelString: string = \"\";\n        this.translate.get('DATA_SAVED_SUCCESSFULLY').subscribe((value) => {\n            savedLabelString = value;\n        });\r\n        let alert = this.alertCtrl.create({\r\n            title: 'Success',\r\n            message: savedLabelString,\r\n            buttons: [\r\n                {\r\n                    text: 'OK',\r\n                    handler: () => {\r\n                        this.viewCtrl.dismiss();\r\n                    }\r\n                }]\r\n        });\r\n        alert.present();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirm-activity/confirm-activity.ts"],"sourceRoot":""}