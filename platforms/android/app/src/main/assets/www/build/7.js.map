{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Platform, IonicPage, NavController, ToastController, AlertController, LoadingController } from 'ionic-angular';\nimport { Device } from '@ionic-native/device';\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\r\n\r\ndeclare var window: any;\nlet verificationPrompt: any;\n\n@IonicPage()\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n    LOGIN_ERROR: string = \"\";\n    LOGGING_YOU: string = \"\";\n    LOGIN_NOT_REGISTERED_WITH_US: string = \"\";\n    CANCEL_BUTTON: string = \"\";\n    REGISTER_BUTTON: string = \"\";\n    LOGIN_ALREADY_REGISTERED_WITH_ANOTHER_DEVICE: string = \"\";\n    LOGIN_YES_REGISTER: string = \"\";\n    LOGIN_REGISTERING: string = \"\";\n    REGISTER_TITLE: string = \"\";\n    REGISTER_VERIFICATION_MESSAGE: string = \"\";\n    REGISTER_INPUT_PLACEHOLDER_NAME: string = \"\";\n    REGISTER_INPUT_BUTTON_VERIFY: string = \"\";\n    REGISTER_VERIFYING_MESSAGE: string = \"\";\n    REGISTER_VERIFICTION_WRONG_CODE_MESSAGE: string = \"\";\n    REGISTER_VERIFICTION_WRONG_CODE_OK: string = \"\";\n\n    constructor(\n        public navCtrl: NavController,\n        private device: Device,\n        public storage: Storage,\n        public androidPermissions: AndroidPermissions,\n        public translate: TranslateService,\n        public platform: Platform,\n        public user: User,\n        public toastCtrl: ToastController,\n        public alertCtrl: AlertController,\n        public loadingCtrl: LoadingController\n    ) {\n\n        //this.phoneNumberPattern = /[0-9]{10}$/;\n        this.phoneNumberPattern = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n        this.translate.get('LOGIN_ERROR').subscribe((value) => {\n            this.loginErrorString = value;\n        });\n\n        this.translate.get([\"LOGIN_ERROR\",\n            \"LOGGING_YOU\",\n            \"LOGIN_NOT_REGISTERED_WITH_US\",\n            \"CANCEL_BUTTON\",\n            \"REGISTER_BUTTON\",\n            \"LOGIN_ALREADY_REGISTERED_WITH_ANOTHER_DEVICE\",\n            \"LOGIN_YES_REGISTER\",\n            \"LOGIN_REGISTERING\",\n            \"REGISTER_TITLE\",\n            \"REGISTER_VERIFICATION_MESSAGE\",\n            \"REGISTER_INPUT_PLACEHOLDER_NAME\",\n            \"REGISTER_INPUT_BUTTON_VERIFY\",\n            \"REGISTER_VERIFYING_MESSAGE\",\n            \"REGISTER_VERIFICTION_WRONG_CODE_MESSAGE\",\n            \"REGISTER_VERIFICTION_WRONG_CODE_OK\",\n        ]).subscribe(\n            (values) => {\n                console.log('Loaded values', values);\n                this.LOGIN_ERROR = values.LOGIN_ERROR;\n                this.LOGGING_YOU = values.LOGGING_YOU\n\n                this.LOGIN_NOT_REGISTERED_WITH_US = values.LOGIN_NOT_REGISTERED_WITH_US;\n                this.CANCEL_BUTTON = values.CANCEL_BUTTON\n                this.REGISTER_BUTTON = values.REGISTER_BUTTON;\n                this.LOGIN_ALREADY_REGISTERED_WITH_ANOTHER_DEVICE = values.LOGIN_ALREADY_REGISTERED_WITH_ANOTHER_DEVICE;\n\n                this.LOGIN_YES_REGISTER = values.LOGIN_YES_REGISTER;\n                this.LOGIN_REGISTERING = values.LOGIN_REGISTERING;\n                this.REGISTER_TITLE = values.REGISTER_TITLE;\n                this.REGISTER_VERIFICATION_MESSAGE = values.REGISTER_VERIFICATION_MESSAGE\n\n                this.REGISTER_INPUT_PLACEHOLDER_NAME = values.REGISTER_INPUT_PLACEHOLDER_NAME;\n                this.REGISTER_INPUT_BUTTON_VERIFY = values.REGISTER_INPUT_BUTTON_VERIFY;\n                this.REGISTER_VERIFYING_MESSAGE = values.REGISTER_VERIFYING_MESSAGE;\n                this.REGISTER_VERIFICTION_WRONG_CODE_MESSAGE = values.REGISTER_VERIFICTION_WRONG_CODE_MESSAGE;\n\n                this.REGISTER_VERIFICTION_WRONG_CODE_OK = values.REGISTER_VERIFICTION_WRONG_CODE_OK;\n\n            });\n\n\n    }\n\n    //countries: any = [{ \"name\": \"Afghanistan\", \"code\": \"93\" }, { \"name\": \"Albania\", \"code\": \"355\" }, { \"name\": \"Algeria\", \"code\": \"213\" }, { \"name\": \"American Samoa\", \"code\": \"1-684\" }, { \"name\": \"Andorra\", \"code\": \"376\" }, { \"name\": \"Angola\", \"code\": \"244\" }, { \"name\": \"Anguilla\", \"code\": \"1-264\" }, { \"name\": \"Antarctica\", \"code\": \"672\" }, { \"name\": \"Antigua and Barbuda\", \"code\": \"1-268\" }, { \"name\": \"Argentina\", \"code\": \"54\" }, { \"name\": \"Armenia\", \"code\": \"374\" }, { \"name\": \"Aruba\", \"code\": \"297\" }, { \"name\": \"Australia\", \"code\": \"61\" }, { \"name\": \"Austria\", \"code\": \"43\" }, { \"name\": \"Azerbaijan\", \"code\": \"994\" }, { \"name\": \"Bahamas\", \"code\": \"1-242\" }, { \"name\": \"Bahrain\", \"code\": \"973\" }, { \"name\": \"Bangladesh\", \"code\": \"880\" }, { \"name\": \"Barbados\", \"code\": \"1-246\" }, { \"name\": \"Belarus\", \"code\": \"375\" }, { \"name\": \"Belgium\", \"code\": \"32\" }, { \"name\": \"Belize\", \"code\": \"501\" }, { \"name\": \"Benin\", \"code\": \"229\" }, { \"name\": \"Bermuda\", \"code\": \"1-441\" }, { \"name\": \"Bhutan\", \"code\": \"975\" }, { \"name\": \"Bolivia\", \"code\": \"591\" }, { \"name\": \"Bosnia and Herzegovina\", \"code\": \"387\" }, { \"name\": \"Botswana\", \"code\": \"267\" }, { \"name\": \"Brazil\", \"code\": \"55\" }, { \"name\": \"British Indian Ocean Territory\", \"code\": \"246\" }, { \"name\": \"British Virgin Islands\", \"code\": \"1-284\" }, { \"name\": \"Brunei\", \"code\": \"673\" }, { \"name\": \"Bulgaria\", \"code\": \"359\" }, { \"name\": \"Burkina Faso\", \"code\": \"226\" }, { \"name\": \"Burundi\", \"code\": \"257\" }, { \"name\": \"Cambodia\", \"code\": \"855\" }, { \"name\": \"Cameroon\", \"code\": \"237\" }, { \"name\": \"Canada\", \"code\": \"1\" }, { \"name\": \"Cape Verde\", \"code\": \"238\" }, { \"name\": \"Cayman Islands\", \"code\": \"1-345\" }, { \"name\": \"Central African Republic\", \"code\": \"236\" }, { \"name\": \"Chad\", \"code\": \"235\" }, { \"name\": \"Chile\", \"code\": \"56\" }, { \"name\": \"China\", \"code\": \"86\" }, { \"name\": \"Christmas Island\", \"code\": \"61\" }, { \"name\": \"Cocos Islands\", \"code\": \"61\" }, { \"name\": \"Colombia\", \"code\": \"57\" }, { \"name\": \"Comoros\", \"code\": \"269\" }, { \"name\": \"Cook Islands\", \"code\": \"682\" }, { \"name\": \"Costa Rica\", \"code\": \"506\" }, { \"name\": \"Croatia\", \"code\": \"385\" }, { \"name\": \"Cuba\", \"code\": \"53\" }, { \"name\": \"Curacao\", \"code\": \"599\" }, { \"name\": \"Cyprus\", \"code\": \"357\" }, { \"name\": \"Czech Republic\", \"code\": \"420\" }, { \"name\": \"Democratic Republic of the Congo\", \"code\": \"243\" }, { \"name\": \"Denmark\", \"code\": \"45\" }, { \"name\": \"Djibouti\", \"code\": \"253\" }, { \"name\": \"Dominica\", \"code\": \"1-767\" }, { \"name\": \"Dominican Republic\", \"code\": \"1-809, 1-829, 1-849\" }, { \"name\": \"East Timor\", \"code\": \"670\" }, { \"name\": \"Ecuador\", \"code\": \"593\" }, { \"name\": \"Egypt\", \"code\": \"20\" }, { \"name\": \"El Salvador\", \"code\": \"503\" }, { \"name\": \"Equatorial Guinea\", \"code\": \"240\" }, { \"name\": \"Eritrea\", \"code\": \"291\" }, { \"name\": \"Estonia\", \"code\": \"372\" }, { \"name\": \"Ethiopia\", \"code\": \"251\" }, { \"name\": \"Falkland Islands\", \"code\": \"500\" }, { \"name\": \"Faroe Islands\", \"code\": \"298\" }, { \"name\": \"Fiji\", \"code\": \"679\" }, { \"name\": \"Finland\", \"code\": \"358\" }, { \"name\": \"France\", \"code\": \"33\" }, { \"name\": \"French Polynesia\", \"code\": \"689\" }, { \"name\": \"Gabon\", \"code\": \"241\" }, { \"name\": \"Gambia\", \"code\": \"220\" }, { \"name\": \"Georgia\", \"code\": \"995\" }, { \"name\": \"Germany\", \"code\": \"49\" }, { \"name\": \"Ghana\", \"code\": \"233\" }, { \"name\": \"Gibraltar\", \"code\": \"350\" }, { \"name\": \"Greece\", \"code\": \"30\" }, { \"name\": \"Greenland\", \"code\": \"299\" }, { \"name\": \"Grenada\", \"code\": \"1-473\" }, { \"name\": \"Guam\", \"code\": \"1-671\" }, { \"name\": \"Guatemala\", \"code\": \"502\" }, { \"name\": \"Guernsey\", \"code\": \"44-1481\" }, { \"name\": \"Guinea\", \"code\": \"224\" }, { \"name\": \"Guinea-Bissau\", \"code\": \"245\" }, { \"name\": \"Guyana\", \"code\": \"592\" }, { \"name\": \"Haiti\", \"code\": \"509\" }, { \"name\": \"Honduras\", \"code\": \"504\" }, { \"name\": \"Hong Kong\", \"code\": \"852\" }, { \"name\": \"Hungary\", \"code\": \"36\" }, { \"name\": \"Iceland\", \"code\": \"354\" }, { \"name\": \"India\", \"code\": \"91\" }, { \"name\": \"Indonesia\", \"code\": \"62\" }, { \"name\": \"Iran\", \"code\": \"98\" }, { \"name\": \"Iraq\", \"code\": \"964\" }, { \"name\": \"Ireland\", \"code\": \"353\" }, { \"name\": \"Isle of Man\", \"code\": \"44-1624\" }, { \"name\": \"Israel\", \"code\": \"972\" }, { \"name\": \"Italy\", \"code\": \"39\" }, { \"name\": \"Ivory Coast\", \"code\": \"225\" }, { \"name\": \"Jamaica\", \"code\": \"1-876\" }, { \"name\": \"Japan\", \"code\": \"81\" }, { \"name\": \"Jersey\", \"code\": \"44-1534\" }, { \"name\": \"Jordan\", \"code\": \"962\" }, { \"name\": \"Kazakhstan\", \"code\": \"7\" }, { \"name\": \"Kenya\", \"code\": \"254\" }, { \"name\": \"Kiribati\", \"code\": \"686\" }, { \"name\": \"Kosovo\", \"code\": \"383\" }, { \"name\": \"Kuwait\", \"code\": \"965\" }, { \"name\": \"Kyrgyzstan\", \"code\": \"996\" }, { \"name\": \"Laos\", \"code\": \"856\" }, { \"name\": \"Latvia\", \"code\": \"371\" }, { \"name\": \"Lebanon\", \"code\": \"961\" }, { \"name\": \"Lesotho\", \"code\": \"266\" }, { \"name\": \"Liberia\", \"code\": \"231\" }, { \"name\": \"Libya\", \"code\": \"218\" }, { \"name\": \"Liechtenstein\", \"code\": \"423\" }, { \"name\": \"Lithuania\", \"code\": \"370\" }, { \"name\": \"Luxembourg\", \"code\": \"352\" }, { \"name\": \"Macau\", \"code\": \"853\" }, { \"name\": \"Macedonia\", \"code\": \"389\" }, { \"name\": \"Madagascar\", \"code\": \"261\" }, { \"name\": \"Malawi\", \"code\": \"265\" }, { \"name\": \"Malaysia\", \"code\": \"60\" }, { \"name\": \"Maldives\", \"code\": \"960\" }, { \"name\": \"Mali\", \"code\": \"223\" }, { \"name\": \"Malta\", \"code\": \"356\" }, { \"name\": \"Marshall Islands\", \"code\": \"692\" }, { \"name\": \"Mauritania\", \"code\": \"222\" }, { \"name\": \"Mauritius\", \"code\": \"230\" }, { \"name\": \"Mayotte\", \"code\": \"262\" }, { \"name\": \"Mexico\", \"code\": \"52\" }, { \"name\": \"Micronesia\", \"code\": \"691\" }, { \"name\": \"Moldova\", \"code\": \"373\" }, { \"name\": \"Monaco\", \"code\": \"377\" }, { \"name\": \"Mongolia\", \"code\": \"976\" }, { \"name\": \"Montenegro\", \"code\": \"382\" }, { \"name\": \"Montserrat\", \"code\": \"1-664\" }, { \"name\": \"Morocco\", \"code\": \"212\" }, { \"name\": \"Mozambique\", \"code\": \"258\" }, { \"name\": \"Myanmar\", \"code\": \"95\" }, { \"name\": \"Namibia\", \"code\": \"264\" }, { \"name\": \"Nauru\", \"code\": \"674\" }, { \"name\": \"Nepal\", \"code\": \"977\" }, { \"name\": \"Netherlands\", \"code\": \"31\" }, { \"name\": \"Netherlands Antilles\", \"code\": \"599\" }, { \"name\": \"New Caledonia\", \"code\": \"687\" }, { \"name\": \"New Zealand\", \"code\": \"64\" }, { \"name\": \"Nicaragua\", \"code\": \"505\" }, { \"name\": \"Niger\", \"code\": \"227\" }, { \"name\": \"Nigeria\", \"code\": \"234\" }, { \"name\": \"Niue\", \"code\": \"683\" }, { \"name\": \"North Korea\", \"code\": \"850\" }, { \"name\": \"Northern Mariana Islands\", \"code\": \"1-670\" }, { \"name\": \"Norway\", \"code\": \"47\" }, { \"name\": \"Oman\", \"code\": \"968\" }, { \"name\": \"Pakistan\", \"code\": \"92\" }, { \"name\": \"Palau\", \"code\": \"680\" }, { \"name\": \"Palestine\", \"code\": \"970\" }, { \"name\": \"Panama\", \"code\": \"507\" }, { \"name\": \"Papua New Guinea\", \"code\": \"675\" }, { \"name\": \"Paraguay\", \"code\": \"595\" }, { \"name\": \"Peru\", \"code\": \"51\" }, { \"name\": \"Philippines\", \"code\": \"63\" }, { \"name\": \"Pitcairn\", \"code\": \"64\" }, { \"name\": \"Poland\", \"code\": \"48\" }, { \"name\": \"Portugal\", \"code\": \"351\" }, { \"name\": \"Puerto Rico\", \"code\": \"1-787, 1-939\" }, { \"name\": \"Qatar\", \"code\": \"974\" }, { \"name\": \"Republic of the Congo\", \"code\": \"242\" }, { \"name\": \"Reunion\", \"code\": \"262\" }, { \"name\": \"Romania\", \"code\": \"40\" }, { \"name\": \"Russia\", \"code\": \"7\" }, { \"name\": \"Rwanda\", \"code\": \"250\" }, { \"name\": \"Saint Barthelemy\", \"code\": \"590\" }, { \"name\": \"Saint Helena\", \"code\": \"290\" }, { \"name\": \"Saint Kitts and Nevis\", \"code\": \"1-869\" }, { \"name\": \"Saint Lucia\", \"code\": \"1-758\" }, { \"name\": \"Saint Martin\", \"code\": \"590\" }, { \"name\": \"Saint Pierre and Miquelon\", \"code\": \"508\" }, { \"name\": \"Saint Vincent and the Grenadines\", \"code\": \"1-784\" }, { \"name\": \"Samoa\", \"code\": \"685\" }, { \"name\": \"San Marino\", \"code\": \"378\" }, { \"name\": \"Sao Tome and Principe\", \"code\": \"239\" }, { \"name\": \"Saudi Arabia\", \"code\": \"966\" }, { \"name\": \"Senegal\", \"code\": \"221\" }, { \"name\": \"Serbia\", \"code\": \"381\" }, { \"name\": \"Seychelles\", \"code\": \"248\" }, { \"name\": \"Sierra Leone\", \"code\": \"232\" }, { \"name\": \"Singapore\", \"code\": \"65\" }, { \"name\": \"Sint Maarten\", \"code\": \"1-721\" }, { \"name\": \"Slovakia\", \"code\": \"421\" }, { \"name\": \"Slovenia\", \"code\": \"386\" }, { \"name\": \"Solomon Islands\", \"code\": \"677\" }, { \"name\": \"Somalia\", \"code\": \"252\" }, { \"name\": \"South Africa\", \"code\": \"27\" }, { \"name\": \"South Korea\", \"code\": \"82\" }, { \"name\": \"South Sudan\", \"code\": \"211\" }, { \"name\": \"Spain\", \"code\": \"34\" }, { \"name\": \"Sri Lanka\", \"code\": \"94\" }, { \"name\": \"Sudan\", \"code\": \"249\" }, { \"name\": \"Suriname\", \"code\": \"597\" }, { \"name\": \"Svalbard and Jan Mayen\", \"code\": \"47\" }, { \"name\": \"Swaziland\", \"code\": \"268\" }, { \"name\": \"Sweden\", \"code\": \"46\" }, { \"name\": \"Switzerland\", \"code\": \"41\" }, { \"name\": \"Syria\", \"code\": \"963\" }, { \"name\": \"Taiwan\", \"code\": \"886\" }, { \"name\": \"Tajikistan\", \"code\": \"992\" }, { \"name\": \"Tanzania\", \"code\": \"255\" }, { \"name\": \"Thailand\", \"code\": \"66\" }, { \"name\": \"Togo\", \"code\": \"228\" }, { \"name\": \"Tokelau\", \"code\": \"690\" }, { \"name\": \"Tonga\", \"code\": \"676\" }, { \"name\": \"Trinidad and Tobago\", \"code\": \"1-868\" }, { \"name\": \"Tunisia\", \"code\": \"216\" }, { \"name\": \"Turkey\", \"code\": \"90\" }, { \"name\": \"Turkmenistan\", \"code\": \"993\" }, { \"name\": \"Turks and Caicos Islands\", \"code\": \"1-649\" }, { \"name\": \"Tuvalu\", \"code\": \"688\" }, { \"name\": \"U.S. Virgin Islands\", \"code\": \"1-340\" }, { \"name\": \"Uganda\", \"code\": \"256\" }, { \"name\": \"Ukraine\", \"code\": \"380\" }, { \"name\": \"United Arab Emirates\", \"code\": \"971\" }, { \"name\": \"United Kingdom\", \"code\": \"44\" }, { \"name\": \"United States\", \"code\": \"1\" }, { \"name\": \"Uruguay\", \"code\": \"598\" }, { \"name\": \"Uzbekistan\", \"code\": \"998\" }, { \"name\": \"Vanuatu\", \"code\": \"678\" }, { \"name\": \"Vatican\", \"code\": \"379\" }, { \"name\": \"Venezuela\", \"code\": \"58\" }, { \"name\": \"Vietnam\", \"code\": \"84\" }, { \"name\": \"Wallis and Futuna\", \"code\": \"681\" }, { \"name\": \"Western Sahara\", \"code\": \"212\" }, { \"name\": \"Yemen\", \"code\": \"967\" }, { \"name\": \"Zambia\", \"code\": \"260\" }, { \"name\": \"Zimbabwe\", \"code\": \"263\" }];\n    countries: any = [{ \"name\": \"India\", \"code\": \"91\" }, { \"name\": \"Italy\", \"code\": \"39\" }, { \"name\": \"United States\", \"code\": \"1\" }];\n\n    // The account fields for the login form.\n    // If you're using the username field with or without email, make\n    // sure to add it to the type\n    account: { country: string, phone_number: string, password: string, verification: string, action: string } = {\n        country: '',\n        phone_number: '',\n        password: '',\n        verification: '',\n        action: 'Login'\n    };\n    phoneNumberPattern: any;\n\n    // Our translated text strings\n    private loginErrorString: string;\n\n    ionViewWillEnter() {\r\n\r\n        this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.READ_SMS).then(\r\n            success => console.log('Permission granted'),\r\n            err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.READ_SMS)\r\n        );\r\n        this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.READ_SMS]);\r\n\r\n    }\n\n    // Attempt to login in through our User service\n    doLogin() {\n\n        let loader = this.loadingCtrl.create({\r\n            content: this.LOGGING_YOU,\r\n        });\n        loader.present();\n\n        var identity = this.device.uuid.toString().concat(this.account.country.toString().replace('+', '')).concat(this.account.phone_number.toString());\n\n        //var identity = 'e81975b6eb40eaaa393358497296';\n\n        let phoneNumberWithCode = this.account.country.concat(this.account.phone_number);\n\n        this.user.authenticate({\n            phone_number: phoneNumberWithCode,\n            password: identity,\n            verification: \"\",\n            action: \"Login\"\n        }).subscribe((resp) => {\n            if (resp) {\n                console.log('Login Successfull');\n\r\n                // Set in local storage for get or set user data.\r\n                this.storage.ready().then(() => {\n                    this.storage.set('user', JSON.stringify(resp));\r\n                });\n\n                loader.dismiss();\n                this.navCtrl.push(MainPage, { isFirstTimeLogin: true });\n            }\n            else {\n                alert('Something went wrong. Please try later.');\n                loader.dismiss();\n            }\n        }, (err: HttpErrorResponse) => {\n            if (err.status === 400) {\n                //User is not registered with us..\n                console.log('Bad Request');\n                loader.dismiss();\n\n                let alert = this.alertCtrl.create({\r\n                    title: 'Gruber',\r\n                    message: this.LOGIN_NOT_REGISTERED_WITH_US,\r\n                    buttons: [\r\n                        {\r\n                            text: this.CANCEL_BUTTON,\r\n                            role: 'cancel',\r\n                            handler: () => {\r\n                                console.log('Cancel clicked');\r\n                            }\r\n                        },\r\n                        {\r\n                            text: this.REGISTER_BUTTON,\r\n                            handler: () => {\r\n                                this.doRegister(phoneNumberWithCode, identity);\r\n                                //this.navCtrl.push('RegisterPage', { phone_number: this.account.phone_number });\r\n                                console.log('Register clicked');\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n                alert.present();\n            }\n            else if (err.status === 409) {\n                //User is alredy registered on another device..\n                console.log('Bad Request');\n                loader.dismiss();\n\n                let alert = this.alertCtrl.create({\r\n                    title: 'Gruber',\r\n                    message: this.LOGIN_ALREADY_REGISTERED_WITH_ANOTHER_DEVICE,\r\n                    buttons: [\r\n                        {\r\n                            text: this.CANCEL_BUTTON,\r\n                            role: 'cancel',\r\n                            handler: () => {\r\n                                console.log('Cancel clicked');\r\n                            }\r\n                        },\r\n                        {\r\n                            text: this.LOGIN_YES_REGISTER,\r\n                            handler: () => {\r\n                                this.doRegister(phoneNumberWithCode, identity);\r\n                                //this.navCtrl.push('RegisterPage', { phone_number: this.account.phone_number });\r\n                                console.log('Register clicked');\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n                alert.present();\n            }\n            else {\n                loader.dismiss();\n\n                // Unable to log in\n                let alertError = this.alertCtrl.create({\r\n                    title: 'Gruber',\r\n                    subTitle: this.loginErrorString,\r\n                    buttons: ['OK']\r\n                });\r\n                alertError.present();\n            }\n        });\n    }\n\n    // Attempt to register in through our User service\n    doRegister(phone_number: string, identity: string) {\n\r\n        let loader = this.loadingCtrl.create({\r\n            content: this.LOGIN_REGISTERING,\r\n        });\n        loader.present();\n\n        let account = {\n            Phone_Number: phone_number,\n            Password: identity,\n            Verification: \"\",\n            Action: \"Register\"\n        }\n\n        this.user.authenticate(account).subscribe((resp) => {\n            console.log('Register Successfull');\n            loader.dismiss();\n\n            if (this.platform.is('android')) {\r\n                this.getVerificationCodeFromSMS();\r\n            }\n\n            verificationPrompt = this.alertCtrl.create({\r\n                title: this.REGISTER_TITLE,\r\n                message: this.REGISTER_VERIFICATION_MESSAGE,\r\n                inputs: [\r\n                    {\r\n                        name: 'VerificationCode',\r\n                        placeholder: this.REGISTER_INPUT_PLACEHOLDER_NAME,\r\n                        type: 'numeric',\r\n                        value: ''\r\n\r\n                    },\r\n                ],\r\n                buttons: [\r\n                    {\r\n                        text: this.CANCEL_BUTTON,\r\n                        handler: data => {\r\n                            console.log('Cancel clicked');\r\n                        }\r\n                    },\r\n                    {\r\n                        text: this.REGISTER_INPUT_BUTTON_VERIFY,\r\n                        handler: data => {\r\n                            // Verify code.\r\n                            this.doVerify(phone_number, identity, data.VerificationCode);\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n            verificationPrompt.present();\n\n        }, (err: HttpErrorResponse) => {\n            if (err.status === 400) {\n                loader.dismiss();\n\n                let errorMessage = JSON.parse(err.error).Message;\n                console.log(errorMessage);\n                let alertError = this.alertCtrl.create({\r\n                    title: 'Gruber',\r\n                    subTitle: errorMessage,\r\n                    buttons: ['OK']\r\n                });\r\n                alertError.present();\n            }\n            else {\n                loader.dismiss();\n            }\n        });\n    }\n\n    // Attempt to Verify in through our User service\n    doVerify(phone_number: string, identity: string, verificationCode: number) {\n        let loaderVerify = this.loadingCtrl.create({\r\n            content: this.REGISTER_VERIFYING_MESSAGE,\r\n        });\n        loaderVerify.present();\r\n\r\n        this.user.authenticate({\r\n            Phone_Number: phone_number,\r\n            Password: identity,\r\n            Verification: verificationCode,\r\n            Action: \"Verify\"\r\n        }).subscribe((resp) => {\r\n            //verification successfull..\r\n            if (resp) {\r\n                loaderVerify.dismiss();\r\n                console.log(JSON.stringify(resp));\r\n\r\n                // Set in local storage for get or set user data.\r\n                this.storage.ready().then(() => {\n                    this.storage.set('user', JSON.stringify(resp));\r\n                });\n\r\n                this.navCtrl.push(MainPage, { isFirstTimeLogin: true });\r\n            }\r\n        }, (err) => {\r\n            //loaderVerify.dismiss();\r\n            console.log(JSON.stringify(err));\r\n            loaderVerify.dismiss();\r\n            let alert = this.alertCtrl.create({\r\n                title: 'Gruber',\r\n                subTitle: this.REGISTER_VERIFICTION_WRONG_CODE_MESSAGE,\r\n                buttons: [this.REGISTER_VERIFICTION_WRONG_CODE_OK]\r\n            });\r\n            alert.present();\r\n            return;\r\n            //verification code wrong!\r\n        });\n    }\n\n    getVerificationCodeFromSMS() {\n        //template : \"Verification code is 125075.\";         \n\n        this.startWatchSMS();\n        document.addEventListener('onSMSArrive', (e: any) => {\r\n            var msg = e.data.body;\r\n            let verificationCode = msg.substr(21, 6);\r\n            if (new Number(verificationCode)) {\r\n                if (verificationPrompt.data.inputs[0].value.length == 0) {\r\n                    verificationPrompt.data.inputs[0].value = verificationCode;\r\n                    verificationPrompt.setTitle(msg);\r\n                    this.stopWatchSMS();\r\n                }\r\n            }\r\n            console.log(msg);\r\n        });\n    }\n\n    startWatchSMS() {\n        if (window.SMS) window.SMS.startWatch(() => {\r\n            console.log('watching started');\r\n        }, Error => {\r\n            console.log('failed to start watching');\r\n        });\n    }\n\n    stopWatchSMS() {\n        if (window.SMS) window.SMS.stopWatch(() => {\r\n            console.log('watching stoped');\r\n        }, Error => {\r\n            console.log('failed to stoped');\r\n        });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}